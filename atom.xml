<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ribose Yim&#39;s Blog</title>
  <subtitle>愿交天下士，罄我怀中藏。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://riboseyim.github.com/"/>
  <updated>2018-05-07T13:00:58.268Z</updated>
  <id>http://riboseyim.github.com/</id>
  
  <author>
    <name>RiboseYim</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Machine Learning:神经网络基础</title>
    <link href="http://riboseyim.github.com/2018/05/07/Machine-Learning-Neural-Network/"/>
    <id>http://riboseyim.github.com/2018/05/07/Machine-Learning-Neural-Network/</id>
    <published>2018-05-07T09:42:51.000Z</published>
    <updated>2018-05-07T13:00:58.268Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Introduction</li>
<li>工作流程：Forward-Propagation、Backward Propagation、Partial Derivatives、Hyper Parameters</li>
<li>深度网络：A single layer Neural Network、Wide Neural Network  vs  Deep Neural Network</li>
<li>维度诅咒</li>
</ul>
<a id="more"></a>
<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>神经网络试图复制人脑的工作以使事情更加智能化。</p>
<p>神经网络通常是一种有监督的学习方法。这意味着需要有一套训练集。理想情况下，训练集合包含了绝对真值（tags | 标签，classes | 类 ）的例子。例如在文本情感分析的情况下，训练集是句子列表和它们各自对应的情绪。（注意：未标记的数据集也可以用来训练神经网络，但这里仅考虑最基本的情况。）</p>
<p>例如：将文本称为 X ，将它们的标签称为 Y 。 有一些函数可以定义 X 和 Y 之间的关系，比如是什么特征（词/短语/句子结构等）导致一个句子是否定的或肯定的的含义。早期的人们习惯于手动查找这些特征，这被称为特征工程（feature engineering）。神经网络使得这一过程实现自动化处理。</p>
<blockquote>
<p>So there are many ways you can understand a concept, choose whichever suits you, being persistent about the learning part. At the end knowing maths is a useful tool when it comes to optimisations or experimentations.</p>
</blockquote>
<h2 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h2><p><img src="http://omb2onfvy.bkt.clouddn.com/NeuralNetwork-Basic-1.jpg" alt=""></p>
<p>人工神经网络由3个组成部分组成：</p>
<ul>
<li>输入层 Input Layer</li>
<li>隐藏（计算）层 Hidden (computation) Layers</li>
<li>输出层 Output Layer</li>
</ul>
<p>学习过程分两步进行：</p>
<ul>
<li>前向传播 Forward-Propagation：猜测答案</li>
<li>反向传播 Back-Propagation：最小化实际答案和猜测答案之间的误差</li>
</ul>
<h4 id="前向传播-Forward-Propagation"><a href="#前向传播-Forward-Propagation" class="headerlink" title="前向传播 Forward-Propagation"></a>前向传播 Forward-Propagation</h4><p><img src="http://omb2onfvy.bkt.clouddn.com/NeuralNetwork-Basic-2.png" alt=""></p>
<p>随机初始化权重（Randomly initialize weights）</p>
<ul>
<li>w1</li>
<li>w2</li>
<li>w3<br>输入层的数据乘以权重形成隐藏层</li>
<li>h1 = (x1 * w1) + (x2 * w1)</li>
<li>h2 = (x1 * w2) + (x2 * w2)</li>
<li>h3 = (x1 * w3) + (x2 * w3)<br>隐藏层的输出通过非线性函数(激活函数)以形成猜测输出(guessed output)</li>
<li>y_ = fn( h1 , h2, h3 )</li>
</ul>
<h4 id="反向传播-Backward-Propagation"><a href="#反向传播-Backward-Propagation" class="headerlink" title="反向传播 Backward Propagation"></a>反向传播 Backward Propagation</h4><p><img src="http://omb2onfvy.bkt.clouddn.com/NeuralNetwork-Basic-3.jpg" alt=""></p>
<ul>
<li>总误差  total_error 通过一个代价函数 (cost function) 来计算，参数为计算期望值( expected value ) y（训练集中的值）和观测值(observed value)  y_（前向传播值）</li>
<li>按每一个权重计算误差的偏导数（这些偏微分是每一个权重在总误差中的量度）</li>
<li>微分后乘以一个小数 ( η ) ，η  称为学习率（learning rate）</li>
<li>然后从各自的权重中减去结果</li>
</ul>
<p>反向传播的结果是以下更新的权重：</p>
<ul>
<li>w1 = w1 - (η * ∂(err) / ∂(w1))</li>
<li>w2 = w2 - (η * ∂(err) / ∂(w2))</li>
<li>w3 = w3 - (η * ∂(err) / ∂(w3))</li>
</ul>
<p>基本上我们对权重初始化时是随机的，并假设他们会产生准确的答案。</p>
<blockquote>
<p>Those familiar with Taylor Series, backpropogation shares the same end result with it. But instead of an indefinite series we try to optimise the first element only.</p>
</blockquote>
<p>偏差（Bias）是添加到隐藏层的权重。它们也被随机初始化并以隐藏层相似的方式更新。虽然隐藏层的作用是映射数据中底层函数（underlying function）的模型，但偏差的作用是横向移动学习函数（the learned function），使其与原始函数（the original function）重叠。</p>
<p><img src="http://omb2onfvy.bkt.clouddn.com/NeuralNetwork-Basic-4.jpg" alt=""></p>
<h4 id="偏导数-Partial-Derivatives"><a href="#偏导数-Partial-Derivatives" class="headerlink" title="偏导数 Partial Derivatives"></a>偏导数 Partial Derivatives</h4><p>计算偏导数使我们能够知道每个权重对误差的贡献。</p>
<p>导数的需求是显而易见的。例如：假设一个试图找到自动驾驶汽车最佳速度的神经网络。现在，如果汽车发现速度比预期的更快或者更慢，那么神经网络会通过加速或减速来改变速度。什么是加速/减速？速度的导数。</p>
<h4 id="解释偏导数：射飞镖"><a href="#解释偏导数：射飞镖" class="headerlink" title="解释偏导数：射飞镖"></a>解释偏导数：射飞镖</h4><p>假设有几个孩子被要求向飞镖靶掷飞镖，瞄准中心。最初的结果是：</p>
<p><img src="http://omb2onfvy.bkt.clouddn.com/NeuralNetwork-Basic-5.jpg" alt=""></p>
<p>现在如果我们确认了总误差并简单地从所有权重中减去，那么我们可以概括每个学生的误差。假设一个孩子瞄准的目标太低，但是我们要求所有的孩子都瞄准得更高一些，结果是：</p>
<p><img src="http://omb2onfvy.bkt.clouddn.com/NeuralNetwork-Basic-6.jpg" alt=""></p>
<p>一些学生的错误可能会减少，但总体错误仍然会增加。通过查找偏导数，我们可以找出每个权重单独产生的误差。单独修正每个权重会得到以下结果：</p>
<p><img src="http://omb2onfvy.bkt.clouddn.com/NeuralNetwork-Basic-7.jpg" alt=""></p>
<h2 id="超参数-Hyper-Parameters"><a href="#超参数-Hyper-Parameters" class="headerlink" title="超参数 Hyper Parameters"></a>超参数 Hyper Parameters</h2><p>虽然神经网络被用于自动化特征选择，但是仍然有一些参数我们必须手动输入。</p>
<h4 id="学习速率-Learning-Rate"><a href="#学习速率-Learning-Rate" class="headerlink" title="学习速率 Learning Rate"></a>学习速率 Learning Rate</h4><p>学习速率是一个非常关键的超参数。如果学习速率太小，那么即使在长时间训练神经网络之后，它仍将远离最优结果。结果看起来像：</p>
<p><img src="http://omb2onfvy.bkt.clouddn.com/NeuralNetwork-Basic-8.jpg" alt=""></p>
<p>相反，如果学习率太高，那么学习者就会过早地得出结论。产生以下结果：</p>
<p><img src="http://omb2onfvy.bkt.clouddn.com/NeuralNetwork-Basic-9.jpg" alt=""></p>
<h4 id="激活函数-Activation-Function"><a href="#激活函数-Activation-Function" class="headerlink" title="激活函数 Activation Function"></a>激活函数 Activation Function</h4><p>简单来说，激活函数（激励函数）负责决定哪些神经元将被激活，即什么信息将传递给其他层。没有激活函数，深度神经网络将失去大量的描述学习能力。</p>
<p>这些函数的非线性负责增加学习者的自由度，使他们能够在较低维度上推广高维的问题。<br>下面是一些流行的激活函数的例子：<br><img src="http://omb2onfvy.bkt.clouddn.com/NeuralNetwork-Basic-10.png" alt=""></p>
<h4 id="成本函数-Cost-Function"><a href="#成本函数-Cost-Function" class="headerlink" title="成本函数 Cost Function"></a>成本函数 Cost Function</h4><p>成本函数是神经网络的核心。它用于计算真实和观察结果的损失(loss)。我们的目标是尽量减少这种损失。因此，成本函数有效地推动了神经网络对其目标的学习。</p>
<p>成本函数是神经网络做的“有多好”的量度，在给定训练样本和预期输出方面。它也可能取决于变量，如权重(weights)和偏差(biases)。</p>
<p>成本函数是一个单一的值，而不是一个矢量，因为它评价了神经网络作为一个整体的效果。<br>一些最着名的成本函数是：</p>
<ul>
<li>平方平均数 Quadratic Cost ，简称均方根 Root Mean Square</li>
<li>交叉熵 Cross Entropy</li>
<li>指数 Exponential (AdaBoost)</li>
<li>相对熵 Kullback–Leibler divergence 或者 信息收益 Information Gain</li>
</ul>
<p>均方根是其中最简单和最常用的。它被简单地定义为：</p>
<blockquote>
<p>Loss = √(expected_output ** 2) - (real_output ** 2)</p>
</blockquote>
<p>神经网络中的成本函数应满足两个条件：</p>
<ul>
<li>成本函数必须能够写成平均值</li>
<li>成本函数不能取决于除一个神经网络中的输出值以外的的任何激活值</li>
</ul>
<p><img src="http://omb2onfvy.bkt.clouddn.com/NeuralNetwork-Basic-11.jpg" alt=""></p>
<h2 id="深度网络"><a href="#深度网络" class="headerlink" title="深度网络"></a>深度网络</h2><p>深度学习是一类机器学习算法，可以从数据中学习更深入（更抽象）的洞察力。</p>
<ul>
<li>使用级联，类似流水线的依次传递管道，拥有多层处理单元（非线性）进行特征提取和转换。</li>
<li>基于以无监督方式学习数据的特征（表示数据知识）。更高级别的特征（在后面的处理图层中找到）是从更低级别的特征（可在初始处理图层中找到）导出的。</li>
<li>多级表示相对应的不同抽象级别；这些级别构成了概念的层次结构。</li>
</ul>
<h4 id="单层神经网络-A-single-layer-Neural-Network"><a href="#单层神经网络-A-single-layer-Neural-Network" class="headerlink" title="单层神经网络 A single layer Neural Network"></a>单层神经网络 A single layer Neural Network</h4><p>单层神经网络，无论第一层（绿色神经元）如何学习，他们只需将其传递给输出即可。</p>
<p><img src="http://omb2onfvy.bkt.clouddn.com/NeuralNetwork-Basic-12.png" alt=""></p>
<h4 id="双层神经网络-Two-layer-Neural-Network"><a href="#双层神经网络-Two-layer-Neural-Network" class="headerlink" title="双层神经网络 Two layer Neural Network"></a>双层神经网络 Two layer Neural Network</h4><p>对于两层神经网络，无论绿色隐藏层学习什么，都要传递到蓝色隐藏层，进一步学习（关于绿色层学习）。因此，隐藏层的数量越多，对先前已经学习过的概念的学习就越多。</p>
<p><img src="http://omb2onfvy.bkt.clouddn.com/NeuralNetwork-Basic-13.png" alt=""></p>
<h4 id="Wide-Neural-Network-vs-Deep-Neural-Network"><a href="#Wide-Neural-Network-vs-Deep-Neural-Network" class="headerlink" title="Wide Neural Network  vs  Deep Neural Network"></a>Wide Neural Network  vs  Deep Neural Network</h4><p>在一层中存在更多神经元的情况下，它不会获得更深层次的洞察力。相反，它的结果是学习到更多的概念。</p>
<p>例：学习英语语法，它需要理解大量的概念。在这种情况下，单层宽神经网络比深度神经网络的效果要好得多，而深度神经网络的宽度要小得多。</p>
<p><img src="http://omb2onfvy.bkt.clouddn.com/NeuralNetwork-Basic-14.png" alt=""></p>
<p>但在学习傅立叶变换(Fourier Transform)的情况下，学习者（神经网络）需要深入学习，因为没有太多的概念需要学习，但每个概念都足够复杂，需要深度学习。</p>
<p><strong>Balance is Key</strong></p>
<p>每个任务都使用深度和宽度神经网络是非常诱人的。这可能是一个非常糟糕的主意，因为：</p>
<ul>
<li>两者都显然需要更多的数据才能达到最低的理想精度（desirable accuracy）</li>
<li>两者都具有成倍增加的时间复杂度（time complexity）</li>
<li>太深的神经网络将尝试更深入地分解一个基本概念，但在这一点上它将对这个概念做出错误的假设，并试图找到不存在的伪模式（pseudo patterns）</li>
<li>太宽的神经网络会试图找到更多数量的特征（可测量特性）。因此，与上面类似，它将开始对数据做出错误的假设。</li>
</ul>
<h2 id="维度诅咒"><a href="#维度诅咒" class="headerlink" title="维度诅咒"></a>维度诅咒</h2><p>维度诅咒（The curse of dimensionality）是指在高维空间（通常具有数百或数千维度）中分析和组织数据时出现的各种现象，这些现象在低维设置中不会发生。</p>
<p>像英语语法或股票奖品等有很多影响他们的特征。使用机器学习必须用具有有限和相对小得多的长度（比实际存在的特征的数量）的阵列（array）/ 矩阵（matrix）来表示这些特征。要做到这一点可能产生两个问题：</p>
<ul>
<li>made by a learner：由于学习者的错误假设而出现偏差。高偏差会导致算法错过功能与目标输出之间的相关关系。这种现象被称为欠拟合（underfitting）。</li>
<li>insufficient learning : 由于对特征的了解不全面，训练集中的小波动导致较大偏差。高方差导致过度拟合（overfitting），将错误作为相关信息进行学习。</li>
</ul>
<h2 id="权衡"><a href="#权衡" class="headerlink" title="权衡"></a>权衡</h2><p><strong>It is typically impossible to have low bias and low variance.</strong></p>
<p>在训练早期因为网络输出远未达到要求，偏差很大。由于数据影响较小，方差很小。在训练后期因为网络已经学会了潜在的功能，偏差很小。</p>
<p><img src="http://omb2onfvy.bkt.clouddn.com/NeuralNetwork-Basic-15.jpg" alt=""></p>
<p>然而，如果训练太长，网络也将学习该数据集特殊的噪声。这导致在不同数据集上测试的结果表现为高方差，因为不同数据集的噪声存在变化。实际上，具有高偏差的算法通常产生更简单的模型，这些模型不倾向于过度拟合，但可能会削弱其训练数据，而不能捕获重要的模式或特征的属性。具有低偏差和高方差的模型在结构上通常更复杂，使得它们能够更准确地表示训练集。然而，在这一过程中，它们也可能代表训练集中的占比较大的噪声，使得它们的预测尽管复杂性增加，但精度却不太精确。</p>
<p>因此，低偏差和低方差同时存在通常是不可能的。</p>
<p>目前，依靠丰富的数据和工具，我们可以轻松地创建复杂的机器学习模型。如果学习者没有提供足够的信息时，实际上偏差就发生了，处理过度拟合将变成中心工作。如果提供更多的例子，则意味着更多的变化，包括模式的数量都增加了。</p>
<h2 id="扩展阅读-《The-Machine-Learning-Master》"><a href="#扩展阅读-《The-Machine-Learning-Master》" class="headerlink" title="扩展阅读:《The Machine Learning Master》"></a>扩展阅读:<a href="https://www.gitbook.com/book/riboseyim/machine-learning" target="_blank" rel="external">《The Machine Learning Master》</a></h2><p><img src="http://p11slcnom.bkt.clouddn.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/" target="_blank" rel="external">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/" target="_blank" rel="external">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/" target="_blank" rel="external">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/" target="_blank" rel="external">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/" target="_blank" rel="external">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network" target="_blank" rel="external">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/" target="_blank" rel="external">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News" target="_blank" rel="external">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/" target="_blank" rel="external">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/" target="_blank" rel="external">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/" target="_blank" rel="external">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://becominghuman.ai/basics-of-neural-network-bef2ba97d2cf" target="_blank" rel="external">Basics of Neural Network | Mukul Malik</a></li>
<li><a href="https://morvanzhou.github.io/tutorials/machine-learning/ML-intro/3-04-activation-function/" target="_blank" rel="external">为什么需要激励函数 (Activation Function)</a></li>
<li><a href="http://selbydavid.com/2018/01/09/neural-network/" target="_blank" rel="external">Building a neural network from scratch in R</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;工作流程：Forward-Propagation、Backward Propagation、Partial Derivatives、Hyper Parameters&lt;/li&gt;
&lt;li&gt;深度网络：A single layer Neural Network、Wide Neural Network  vs  Deep Neural Network&lt;/li&gt;
&lt;li&gt;维度诅咒&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="架构师" scheme="http://riboseyim.github.com/tags/%E6%9E%B6%E6%9E%84%E5%B8%88/"/>
    
      <category term="数学与算法" scheme="http://riboseyim.github.com/tags/%E6%95%B0%E5%AD%A6%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
      <category term="Machine-Learning" scheme="http://riboseyim.github.com/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>玩转编程语言:基于Golang开发Web应用</title>
    <link href="http://riboseyim.github.com/2018/04/27/Language-Go-lang-Web/"/>
    <id>http://riboseyim.github.com/2018/04/27/Language-Go-lang-Web/</id>
    <published>2018-04-27T09:39:48.000Z</published>
    <updated>2018-04-30T11:32:59.695Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="beego"><a href="#beego" class="headerlink" title="beego"></a>beego</h2><h4 id="Beego-ABC"><a href="#Beego-ABC" class="headerlink" title="Beego ABC"></a>Beego ABC</h4><ul>
<li><p>lib</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">go</span> get github.com/astaxie/beego</div><div class="line"><span class="keyword">go</span> get github.com/beego/admin/src/lib</div></pre></td></tr></table></figure>
</li>
<li><p>tools<br>bee 可执行文件默认路径 $GOPATH/bin</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">go</span> get github.com/beego/bee  <span class="comment">//tools</span></div></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">The commands are:</div><div class="line">    new         create an application base on beego framework</div><div class="line">    run         run the app <span class="built_in">which</span> can hot compile</div><div class="line">    pack        compress an beego project</div><div class="line">    api         create an api application base on beego framework</div><div class="line">    bale        packs non-Go files to Go <span class="built_in">source</span> files</div><div class="line">    version     show the bee &amp; beego version</div><div class="line">    generate    <span class="built_in">source</span> code generator</div><div class="line">    migrate     run database migrations</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">bash-3.2$ bee new hello</div><div class="line">______</div><div class="line">| ___ \</div><div class="line">| |_/ /  ___   ___</div><div class="line">| ___ \ / _ \ / _ \</div><div class="line">| |_/ /|  __/|  __/</div><div class="line">\____/  \___| \___| v1.9.1</div></pre></td></tr></table></figure>
<h4 id="Beego-Resources"><a href="#Beego-Resources" class="headerlink" title="Beego Resources"></a>Beego Resources</h4><ul>
<li><a href="https://beego.me/docs/intro/" target="_blank" rel="external">The architecture of Beego</a></li>
<li><a href="https://github.com/beego/tutorial/blob/master/README_zh.md" target="_blank" rel="external">beego入门教程</a></li>
<li><a href="https://github.com/beego/admin" target="_blank" rel="external">基于beego的后台管理系统</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://blog.usejournal.com/top-6-web-frameworks-for-go-as-of-2017-23270e059c4b" target="_blank" rel="external">Top 6 web frameworks for Go as of 2017</a>.doc   </li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>DevOps 漫谈：基于OpenCensus构建分布式跟踪系统</title>
    <link href="http://riboseyim.github.com/2018/04/27/DevOps-OpenCensus/"/>
    <id>http://riboseyim.github.com/2018/04/27/DevOps-OpenCensus/</id>
    <published>2018-04-27T02:33:09.000Z</published>
    <updated>2018-05-02T04:03:10.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Distributed Tracing and Monitoring System</li>
<li>OpenCensus: A framework for distributed tracing</li>
</ul>
<a id="more"></a>
<p><img src="http://og2061b3n.bkt.clouddn.com/DTM-OpenCensus-Theme.png" alt=""></p>
<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>随着互联网技术的高速发展，以往单应用的服务架构已经很难处理如山洪般增长的信息数据，随着云计算技术的大规模应用，以微服务、RESTful 为代表的各种软件架构广泛应用，跨团队、跨编程语言的大规模分布式系统也越来越多。相对而言，现在要理解系统行为，追踪诊断性能问题会复杂得多。</p>
<p>在单应用环境下，业务都在同一个服务器上，如果出现错误和异常只需要盯住一个点，就可以快速定位和处理问题；但是在微服务的架构下，功能模块天然是分布式部署运行的，前后台的业务流会经过很多个微服务的处理和传递，就连日志监控都会成为一个大问题（日志分散在多个服务器、无状态服务下如何查看业务流的处理顺序等），更不要说服务之间还有复杂的交互关系。</p>
<p>用户的一个请求在系统中会经过多个子系统（或者多个微服务）的处理，而且是发生在不同机器甚至是不同集群，当发生异常时需要快速发现问题，并准确定位到是哪个环节出了问题。对系统行为进行跟踪必须持续进行，因为异常的发生是无法预料的，有些甚至难以重现。跟踪需要无所不在，否则可能会遗漏某些重要的故障点。</p>
<p>为了解决上述问题，分布式跟踪系统 —— 一种帮助理解分布式系统行为、帮助分析性能问题的工具应运而生。</p>
<p><img src="http://og2061b3n.bkt.clouddn.com/DTM-OpenCensus-Micro-1.png" alt=""></p>
<p><img src="http://og2061b3n.bkt.clouddn.com/DTM-OpenCensus-Micro-2.png" alt=""></p>
<h2 id="Distributed-Tracing-and-Monitoring-System"><a href="#Distributed-Tracing-and-Monitoring-System" class="headerlink" title="Distributed Tracing and Monitoring System"></a>Distributed Tracing and Monitoring System</h2><p>讨论分布式跟踪，就一定会谈到 Dapper —— Google 公司研发并应用于自己生产环境的一款跟踪系统（设计之初参考了一些 Magpie 和 X-Trace 的理念 ）。Dapper 不仅为业内提供了非常有参考价值的实现，同步发表论文的也成为了当前分布式跟踪系统的重要理论基础。</p>
<ul>
<li><a href="https://static.googleusercontent.com/media/research.google.com/zh-CN//archive/papers/dapper-2010-1.pdf" target="_blank" rel="external">《Dapper, a Large-Scale Distributed Systems Tracing Infrastructure|Google Technical Report dapper-2010-1, April 2010》</a></li>
</ul>
<blockquote>
<p>Modern Internet services are often implemented as complex, large-scale distributed systems.These applications are constructed from collections of software modules that may be developed by different teams, perhaps in different programming languages, and could span many thousands of machines across multiple physical facilities. Tools that aid in understanding system behavior and reasoning about performance issues are invaluable in such an environment.</p>
</blockquote>
<p>在这篇论文中，Google 提出了关于分布式跟踪系统的一些重要概念：</p>
<ul>
<li><p>Annotation-based，基于标注或植入点、埋点<br>在应用程序或中间件中明确定义全局标注（Annotation），一个特殊的ID，通过这个 ID 连接每一条请求记录。当然，这需要代码植入，在生产环境中可以通过一个通用组件开放给开发人员。</p>
</li>
<li><p>跟踪树和span<br>在 Dapper 跟踪树（Trace tree）中，基本单元是树节点（分配 spanid）。节点之间通过连线表示父子关系，通过 parentId 和 spanId 把所有的关系串联起来，实现记录业务流的作用。</p>
</li>
</ul>
<p><img src="http://og2061b3n.bkt.clouddn.com/DTM-Dapper-TraceTree-Span.png" alt=""></p>
<p>Google Dapper 的理念影响了一批分布式跟踪系统的发展，例如 2012 年，Twitter 公司严格按照 Dapper 论文的要求实现了 Zipkin （Scala 编写，集成到 Twitter公司自己的分布式服务 Finagle ）；Uber 公司基于 Google Dapper 和 Twitter Zipkin 的灵感，开发了开源分布式跟踪系统 Jaeger，例如 Jaeger 规范中同样定义了 Span（跨度, 跨径，两个界限间的距离）。</p>
<p><img src="http://og2061b3n.bkt.clouddn.com/DTM-Uber-Jaeger.png" alt=""></p>
<p>然而，Google Dapper 的定位更准确的说是分析系统，并不能解决从生产服务中提取数据的难题，OpenCensus 项目为此提供了解决方案。</p>
<h2 id="OpenCensus-A-framework-for-distributed-tracing"><a href="#OpenCensus-A-framework-for-distributed-tracing" class="headerlink" title="OpenCensus: A framework for distributed tracing"></a>OpenCensus: A framework for distributed tracing</h2><blockquote>
<p>OpenCensus is a framework for stats collection and distributed tracing.</p>
</blockquote>
<p><img src="http://og2061b3n.bkt.clouddn.com/DTM-OpenCensus-Logo.png" alt=""></p>
<p>OpenCensus 项目是 Google 开源的一个用来收集和追踪应用指标的第三方库。OpenCensus 能够提供了一套统一的测量工具：跨服务捕获跟踪跨度（span）、应用级别指标以及来自其他应用的元数据（例如日志）。OpenCensus 有如下一些主要特点：</p>
<ul>
<li>标准通信协议和一致的 API ：用于处理 metric 和 trace</li>
<li>多语言库，包括Java，C++，Go，.Net，Python，PHP，Node.js，Erlang 和 Ruby</li>
<li>与 RPC 框架的集成，可以提供开箱即用的追踪和指标。</li>
<li>集成的存储和分析工具</li>
<li>完全开源，支持第三方集成和输出的插件化</li>
<li>不需要额外的服务器或守护进程来支持 OpenCensus</li>
<li>In process debugging：一个可选的代理程序，用于在目标主机上显示请求和指标数据</li>
</ul>
<p><img src="http://og2061b3n.bkt.clouddn.com/DTM-OpenCensus-Language.png" alt=""></p>
<h2 id="OpenCensus-Concepts"><a href="#OpenCensus-Concepts" class="headerlink" title="OpenCensus Concepts"></a>OpenCensus Concepts</h2><h4 id="Tags-标签"><a href="#Tags-标签" class="headerlink" title="Tags | 标签"></a>Tags | 标签</h4><p>OpenCensus 允许系统在记录时将度量与维度相关联。记录的数据使我们能够从各种不同的角度分析测量结果，即使在高度互连和复杂的系统中也能够应付。</p>
<h4 id="Stats-统计"><a href="#Stats-统计" class="headerlink" title="Stats | 统计"></a>Stats | 统计</h4><p>Stats 收集库和应用程序记录的测量结果，汇总、导出统计数据。</p>
<h4 id="Trace-跟踪"><a href="#Trace-跟踪" class="headerlink" title="Trace | 跟踪"></a>Trace | 跟踪</h4><p>Trace 是嵌套 Span (跨度)的集合。Trace 包括单个用户请求的处理进度，直到用户请求得到响应。Trace 通常跨越分布式系统中的多个节点。跟踪由 TraceId 唯一标识， Trace 中的所有 Span 都具有相同的 TraceId 。</p>
<p>一个 Span 代表一个操作或一个工作单位。多个 Span 可以是“Trace”的一部分，它代表跨多个进程/节点的执行路径（通常是分布式的）。同一轨迹内的 Span 具有相同的 TraceId。</p>
<p>Span 共有属性：</p>
<ul>
<li>TraceId</li>
<li>SpanId</li>
<li>Start Time</li>
<li>End Time</li>
<li>Status</li>
</ul>
<p>Span 可选属性：</p>
<ul>
<li>Parent SpanId</li>
<li>Remote Parent</li>
<li>Attributes</li>
<li>Annotations</li>
<li>Message Events</li>
<li>Links</li>
</ul>
<h4 id="Exporter-出口商"><a href="#Exporter-出口商" class="headerlink" title="Exporter | 出口商"></a>Exporter | 出口商</h4><p>OpenCensus is vendor-agnostic and can upload data to any backend with various exporter implementations. Even though, OpenCensus provides support for many backends, users can also implement their own exporters for proprietary and unofficially supported backends.</p>
<p>OpenCensus 是独立于供应商的，可以通过各种 Exporter 实现将数据上传到任何后端。尽管OpenCensus 为一些后端服务提供了 API ，但用户也可以实现自己的 Exporter。</p>
<h4 id="Introspection-内省"><a href="#Introspection-内省" class="headerlink" title="Introspection | 内省"></a>Introspection | 内省</h4><p>OpenCensus 提供在线仪表板，显示进程中的诊断数据。这些页面被称为 z-pages ，它们有助于了解如何查看来自特定进程的数据，而不必依赖任何度量收集器或分布式跟踪后端。</p>
<p><img src="http://og2061b3n.bkt.clouddn.com/DTM-OpenCensus-traceZ.png" alt=""></p>
<h2 id="OpenCensus-Examples"><a href="#OpenCensus-Examples" class="headerlink" title="OpenCensus Examples"></a>OpenCensus Examples</h2><h4 id="创建指标"><a href="#创建指标" class="headerlink" title="创建指标"></a>创建指标</h4><ul>
<li>定义指标类型</li>
<li>定义显示方式</li>
</ul>
<p>Track Metrics 一般需要考虑服务负载（Server Load）、响应时间（Response Time）、误码率(Error Rates)等。</p>
<p>实例：</p>
<ul>
<li><a href="https://github.com/census-instrumentation/opencensus-go/blob/master/examples/http/helloworld_server/main.go" target="_blank" rel="external">opencensus-go-examples-helloworld</a></li>
<li><a href="https://github.com/census-instrumentation/opencensus-java" target="_blank" rel="external">opencensus-java-examples</a></li>
<li><a href="https://medium.com/@orijtech/hello-world-for-web-servers-in-go-with-opencensus-29955b3f02c6" target="_blank" rel="external">“Hello, world!” for web servers in Go with OpenCensus</a></li>
</ul>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> (</div><div class="line">  <span class="string">"go.opencensus.io/stats"</span></div><div class="line">  <span class="string">"go.opencensus.io/tag"</span></div><div class="line">  <span class="string">"go.opencensus.io/stats/view"</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="keyword">var</span> (</div><div class="line">  requestCounter             *stats.Float64Measure</div><div class="line">  requestlatency             *stats.Float64Measure</div><div class="line">  codeKey                    tag.Key</div><div class="line">  DefaultLatencyDistribution = view.DistributionAggregation&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">16</span>, <span class="number">20</span>, <span class="number">25</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">65</span>, <span class="number">80</span>, <span class="number">100</span>, <span class="number">130</span>, <span class="number">160</span>, <span class="number">200</span>, <span class="number">250</span>, <span class="number">300</span>, <span class="number">400</span>, <span class="number">500</span>, <span class="number">650</span>, <span class="number">800</span>, <span class="number">1000</span>, <span class="number">2000</span>, <span class="number">5000</span>, <span class="number">10000</span>, <span class="number">20000</span>, <span class="number">50000</span>, <span class="number">100000</span>&#125;</div><div class="line">)</div><div class="line">	codeKey, _ = tag.NewKey(<span class="string">"banias/keys/code"</span>)</div><div class="line">	requestCounter, _ = stats.Float64(<span class="string">"banias/measures/request_count"</span>, <span class="string">"Count of HTTP requests processed"</span>, stats.UnitNone)</div><div class="line">	requestlatency, _ = stats.Float64(<span class="string">"banias/measures/request_latency"</span>, <span class="string">"Latency distribution of HTTP requests"</span>, stats.UnitMilliseconds)</div><div class="line">	view.Subscribe(</div><div class="line">		&amp;view.View&#123;</div><div class="line">			Name:        <span class="string">"request_count"</span>,</div><div class="line">			Description: <span class="string">"Count of HTTP requests processed"</span>,</div><div class="line">			TagKeys:     []tag.Key&#123;codeKey&#125;,</div><div class="line">			Measure:     requestCounter,</div><div class="line">			Aggregation: view.CountAggregation&#123;&#125;,</div><div class="line">		&#125;)</div><div class="line">	view.Subscribe(</div><div class="line">		&amp;view.View&#123;</div><div class="line">			Name:        <span class="string">"request_latency"</span>,</div><div class="line">			Description: <span class="string">"Latency distribution of HTTP requests"</span>,</div><div class="line">			TagKeys:     []tag.Key&#123;codeKey&#125;,</div><div class="line">			Measure:     requestlatency,</div><div class="line">			Aggregation: DefaultLatencyDistribution,</div><div class="line">		&#125;)</div><div class="line"></div><div class="line">	view.SetReportingPeriod(<span class="number">1</span> * time.Second)</div></pre></td></tr></table></figure>
<h4 id="收集指标数据"><a href="#收集指标数据" class="headerlink" title="收集指标数据"></a>收集指标数据</h4><ul>
<li>Call the Record method</li>
</ul>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Go Code Example</span></div><div class="line"><span class="comment">// 说明：defer 用于资源的释放，会在函数返回之前进行调用。</span></div><div class="line"><span class="comment">// 如果有多个 defer表达式，调用顺序类似于栈，越后面的 defer 表达式越先被调用。</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Collector)</span> <span class="title">Collect</span><span class="params">(ctx *fasthttp.RequestCtx)</span></span> &#123;</div><div class="line">  <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">(begin time.Time)</span></span> &#123;</div><div class="line">      responseTime := <span class="keyword">float64</span>(time.Since(begin).Nanoseconds() / <span class="number">1000</span>)</div><div class="line">      occtx, _ := tag.New(context.Background(), tag.Insert(codeKey, strconv.Itoa(ctx.Response.StatusCode())), )</div><div class="line">      stats.Record(occtx, requestCounter.M(<span class="number">1</span>))</div><div class="line">      stats.Record(occtx, requestlatency.M(responseTime))</div><div class="line">    &#125;(time.Now())</div><div class="line"></div><div class="line">    <span class="comment">/*do some stuff */</span></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="第三方监控系统接口"><a href="#第三方监控系统接口" class="headerlink" title="第三方监控系统接口"></a>第三方监控系统接口</h4><p>OpenCensus 收集和跟踪的应用指标可以在本地显示，也可将其发送到第三方分析工具或监控系统实现可视化，目前支持：</p>
<ul>
<li><a href="https://prometheus.io" target="_blank" rel="external">Prometheus|普罗米修斯</a></li>
<li><a href="https://signalfx.com" target="_blank" rel="external">SignalFX</a></li>
<li><a href="https://cloud.google.com/stackdriver/" target="_blank" rel="external">Stackdriver|适用于 Google Cloud Platform 与 AWS 应用的监控、日志记录和诊断工具</a></li>
<li><a href="https://zipkin.io" target="_blank" rel="external">Zipkin</a></li>
<li>AWS X-Ray</li>
</ul>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"> <span class="keyword">import</span> (</div><div class="line"> 	 <span class="string">"go.opencensus.io/exporter/prometheus"</span></div><div class="line">   <span class="string">"go.opencensus.io/exporter/stackdriver"</span></div><div class="line">   <span class="string">"go.opencensus.io/stats/view"</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="comment">// Export to Prometheus Monitoring.</span></div><div class="line"> Exporter, err := prometheus.NewExporter(prometheus.Options&#123;&#125;)</div><div class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</div><div class="line">	logger.Error(<span class="string">"Error creating prometheus exporter  "</span>, zap.Error(err))</div><div class="line">&#125;</div><div class="line">view.RegisterExporter(pExporter)</div><div class="line"></div><div class="line"></div><div class="line"> <span class="comment">// Export to Stackdriver Monitoring.</span></div><div class="line">sExporter, err := stackdriver.NewExporter(stackdriver.Options&#123;ProjectID: config.ProjectID&#125;)</div><div class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</div><div class="line">	logger.Error(<span class="string">"Error creating stackdriver exporter  "</span>, zap.Error(err))</div><div class="line">&#125;</div><div class="line"></div><div class="line">view.RegisterExporter(sExporter)</div></pre></td></tr></table></figure>
<h2 id="OpenCensus-Principle-工作原理"><a href="#OpenCensus-Principle-工作原理" class="headerlink" title="OpenCensus Principle | 工作原理"></a>OpenCensus Principle | 工作原理</h2><h4 id="Context"><a href="#Context" class="headerlink" title="Context"></a>Context</h4><ul>
<li><a href="https://github.com/census-instrumentation/opencensus-go/blob/master/examples/helloworld/main.go" target="_blank" rel="external">opencensus-go-examples-helloworld-context</a></li>
<li><a href="https://segmentfault.com/a/1190000006744213#articleHeader8" target="_blank" rel="external">Go语言并发模型：使用 context | oscarzhao 2016年08月29日</a></li>
</ul>
<h2 id="Zipkin"><a href="#Zipkin" class="headerlink" title="Zipkin"></a>Zipkin</h2><p><a href="https://zipkin.io" target="_blank" rel="external">Zipkin</a></p>
<h4 id="Zipkin-ABC"><a href="#Zipkin-ABC" class="headerlink" title="Zipkin ABC"></a>Zipkin ABC</h4><ul>
<li><a href="https://medium.com/devthoughts/instrumenting-a-go-application-with-zipkin-b79cc858ac3e" target="_blank" rel="external">Instrumenting a Go application with Zipkin</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">$ docker image pull openzipkin/zipkin</div><div class="line">Using default tag: latest</div><div class="line">latest: Pulling from openzipkin/zipkin</div><div class="line">3a9e9033596c: Pull complete</div><div class="line">e41580404458: Pull complete</div><div class="line">c68a1262225d: Pull complete</div><div class="line">Digest: sha256:0a216d66e753de48d63e9aa36526781af6967549ce9ab4c8bcaf02ac4031912b</div><div class="line">Status: Downloaded newer image <span class="keyword">for</span> openzipkin/zipkin:latest</div><div class="line"></div><div class="line">$ docker container run openzipkin/zipkin</div><div class="line"><span class="built_in">log</span>4j:WARN No appenders could be found <span class="keyword">for</span> logger (org.springframework.web.context.support.StandardServletEnvironment).</div><div class="line"><span class="built_in">log</span>4j:WARN Please initialize the <span class="built_in">log</span>4j system properly.</div><div class="line">                                    ********</div><div class="line">                                  **        **</div><div class="line">                                 *            *</div><div class="line">                                **            **</div><div class="line">                                **            **</div><div class="line">                                 **          **</div><div class="line">                                  **        **</div><div class="line">                                    ********</div><div class="line">                                      ****</div><div class="line">                                      ****</div><div class="line">        ****                          ****</div><div class="line">     ******                           ****                                 ***</div><div class="line">  ****************************************************************************</div><div class="line">    *******                           ****                                 ***</div><div class="line">        ****                          ****</div><div class="line">                                       **</div><div class="line">                                       **</div><div class="line"></div><div class="line"></div><div class="line">             *****      **     *****     ** **       **     **   **</div><div class="line">               **       **     **  *     ***         **     **** **</div><div class="line">              **        **     *****     ****        **     **  ***</div><div class="line">             ******     **     **        **  **      **     **   **</div><div class="line"></div><div class="line">:: Powered by Spring Boot ::         (v2.0.1.RELEASE)</div><div class="line"></div><div class="line">$ docker container ls --all</div><div class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                        PORTS                              NAMES</div><div class="line">f9935fcaf4ba        openzipkin/zipkin   <span class="string">"/bin/sh -c 'test -n"</span>   5 seconds ago       Up 4 seconds                  9410/tcp, 0.0.0.0:9411-&gt;9411/tcp   musing_jepsen</div></pre></td></tr></table></figure>
<p><img src="http://og2061b3n.bkt.clouddn.com/DTM-Twitter-Zipkin.png" alt=""></p>
<h2 id="读者问题"><a href="#读者问题" class="headerlink" title="读者问题"></a>读者问题</h2><ul>
<li>OpenCensus vs <a href="http://opentracing.io/" target="_blank" rel="external">OpenTracing</a></li>
</ul>
<h2 id="OpenTracing"><a href="#OpenTracing" class="headerlink" title="OpenTracing"></a>OpenTracing</h2><ul>
<li><p>待续</p>
</li>
<li><p><a href="https://wu-sheng.gitbooks.io/opentracing-io/content/" target="_blank" rel="external">OpenTraing 文档 | 中文 </a></p>
</li>
<li><a href="https://medium.com/opentracing/the-difference-between-tracing-tracing-and-tracing-84b49b2d54ea" target="_blank" rel="external">The difference between tracing, tracing, and tracing</a></li>
</ul>
<h2 id="扩展阅读：开源架构技术漫谈"><a href="#扩展阅读：开源架构技术漫谈" class="headerlink" title="扩展阅读：开源架构技术漫谈"></a>扩展阅读：开源架构技术漫谈</h2><ul>
<li><a href="https://riboseyim.github.io/2018/04/27/DevOps-OpenCensus" target="_blank" rel="external">DevOps 漫谈：基于OpenCensus构建分布式跟踪系统</a></li>
<li><a href="https://riboseyim.github.io/2017/05/23/RestfulAPI/" target="_blank" rel="external">基于Go语言快速构建一个RESTful API服务</a></li>
<li><a href="https://riboseyim.github.io/2017/06/12/OpenSource-Kafka-Microservice/" target="_blank" rel="external">基于Kafka构建事件溯源型微服务</a></li>
<li><a href="https://riboseyim.github.io/2017/10/30/Protocol-gRPC/" target="_blank" rel="external">远程通信协议：从 CORBA 到 gRPC</a></li>
<li><a href="https://riboseyim.github.io/2017/05/24/Log/" target="_blank" rel="external">应用程序开发中的日志管理(Go语言描述)</a></li>
<li><a href="https://riboseyim.github.io/2017/12/04/Visualization-Graphite/" target="_blank" rel="external">数据可视化（七）Graphite 体系结构详解</a></li>
<li><a href="https://riboseyim.github.io/2016/11/26/DTrace/" target="_blank" rel="external">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd" target="_blank" rel="external">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.github.io/2017/04/17/DTrace_FTrace/" target="_blank" rel="external">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/DTrace_bcc/" target="_blank" rel="external">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/DTrace-Linux/" target="_blank" rel="external">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
<li><a href="https://riboseyim.github.io/2016/08/15/OpenSource-Kafka/" target="_blank" rel="external">DevOps 资讯 | LinkedIn 开源 Kafka Monitor</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://opensource.googleblog.com/2018/01/opencensus.html" target="_blank" rel="external">OpenCensus: A Stats Collection and Distributed Tracing Framework | Wednesday, January 17, 2018 | Google Open Source Blog</a></li>
<li><a href="http://www.infoq.com/cn/news/2017/11/Uber-open-spurce-Jaeger" target="_blank" rel="external">Uber正式开源其分布式跟踪系统Jaeger | 2017年11月9日</a></li>
<li><a href="http://www.infoq.com/cn/articles/evolving-distributed-tracing-at-uber-engineering" target="_blank" rel="external">Uber优步分布式追踪技术再度精进</a></li>
<li><a href="https://blog.doit-intl.com/measure-once-export-anywhere-opencensus-in-the-wild-61724f44eb00" target="_blank" rel="external">Measure Once — Export Anywhere: OpenCensus in the wild</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Distributed Tracing and Monitoring System&lt;/li&gt;
&lt;li&gt;OpenCensus: A framework for distributed tracing&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="OpenSource" scheme="http://riboseyim.github.com/tags/OpenSource/"/>
    
      <category term="DevOps" scheme="http://riboseyim.github.com/tags/DevOps/"/>
    
  </entry>
  
  <entry>
    <title>DevOps 漫谈:从作坊到工厂的寓言故事</title>
    <link href="http://riboseyim.github.com/2018/04/10/DevOps-Phoenix/"/>
    <id>http://riboseyim.github.com/2018/04/10/DevOps-Phoenix/</id>
    <published>2018-04-10T07:12:14.000Z</published>
    <updated>2018-04-28T09:52:04.156Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>背景：《凤凰项目》的灵魂</li>
<li>管理约束：最大的瓶颈是人</li>
<li>任务追踪：可视化工作区和看板实践</li>
<li>改进日常工作：预防性维护</li>
<li>反常识：系统里要经常出些故障、人力资源使用率与效率成反比</li>
<li>安全与审计</li>
<li>IT 价值流：像电力一样无处不在</li>
</ul>
<blockquote>
<p>转变主要不是基于自动化，相反，这种不可思议的改进来自于调整关于工作系统的策略和控制半成品的策略，确保有一个高效的跨职能团队，让所有事情都为约束点服务，以及管理好工作交接。——《凤凰项目 一个IT运维的传奇故事》</p>
</blockquote>
<a id="more"></a>
<p>谈到 DevOps 概念，有几本书是绕不过去的，《凤凰项目：一个IT运维的传奇故事》（The Phoenix Project:a Novel About IT,DevOps,and Helping Your Business Win）就是其中之一。本书的主要特色之一是将 IT 运营和工厂生产对应起来，借鉴制造业的经验提升 IT 价值。</p>
<h2 id="背景：《凤凰项目》的灵魂"><a href="#背景：《凤凰项目》的灵魂" class="headerlink" title="背景：《凤凰项目》的灵魂"></a>背景：《凤凰项目》的灵魂</h2><p>《凤凰项目》的作者金(Gene Kim);贝尔(Kevin Behr);斯帕福德(George Spafford)，显然是高德拉特的拥趸。在整个故事中都贯穿了高德拉特的思想——约束理论(限制理论，Theory of Constraints，TOC)。</p>
<blockquote>
<p>“不应该根据第一个工作站的效率来安排工作，而是根据瓶颈资源所能完成工作的速度来安排工作。”</p>
</blockquote>
<p>埃利亚胡·高德拉特博士（Eliyahu M. Goldratt，1947－2011），以色列物理学家，同时是一位企业管理领域的大师。1984年，高德拉特博士发表了他的重要著作《目标：一种持续改进的流程》（The Goal: A Process of On going Improvement），书中以小说的形式提出了约束理论。他主张一个复杂的系统隐含着简单化，即使在任何时间，一个复杂的系统可能是由成千上万人和一系列设备所组成，但是只有非常少的变数或许只有一个，称为限制，它会限制（或阻碍）此系统达到更高的目标。在此基础上，他进一步提出了在制造业经营生产活动中定义和消除制约因素的一些规范化方法以支持连续改进（Continuous Improvement），例如约束理论之外还提出了关键链（Critical Chain Project Management，CCPM）项目规划和管理方法（与关键路径分析方法不同，它主要侧重于项目执行中所需的资源，关注资源依赖，强调监测项目的进展和缓冲的使用率，而不是规划个别任务的进展速度）。精益生产或者丰田生产系统在某种程度上也是以约束理论为基础的。</p>
<p>回到《凤凰项目》，它的体裁是按照时间线叙事的日记体：临危受命的主人公一直致力于改善各个约束点（瓶颈）对于整个组织能力的限制。起初是一个无可替代的工程师，接着是应用程序部署流程，安全审计，最后约束点移到了技术部门之外，甚至包括外部供应商。简单来说，小说的脉络遵循实践约束理论的基本步骤：</p>
<ul>
<li>识别约束点；</li>
<li>利用约束点；</li>
<li>让所有其他活动都从属于约束点；</li>
<li>把约束点提升到新的水平；</li>
<li>寻找下一个约束点。</li>
</ul>
<h2 id="管理约束"><a href="#管理约束" class="headerlink" title="管理约束"></a>管理约束</h2><blockquote>
<p>“<strong>在瓶颈之外的任何地方作出的改进都是假象</strong>，在瓶颈之后作出任何改进都是徒劳的，而在瓶颈之前作出的任何改进则只会导致瓶颈处堆积更多的库存。” —— 艾利·高德拉特</p>
</blockquote>
<h4 id="最大的瓶颈是人"><a href="#最大的瓶颈是人" class="headerlink" title="最大的瓶颈是人"></a>最大的瓶颈是人</h4><p>如果希望通过这本书获得一些解决方案和技术细节的人估计要失望了，《凤凰项目》本质上是一本探讨如何提高组织效率的书，或者说主要是讨论人、顺带谈了一些协同方法论。</p>
<p>我相信很多人看完《凤凰项目》之后都会把故事里面里面一堆人物名字搞混，但是有一个角色甚至比较主角还有意思 —— 布伦特。个人能力超强，工作超努力，对各类技术细节了如指掌，所有大小项目大家都喜欢找他合作，有了问题也会第一时间想到他，典型的超级员工、英雄人物。与此同时，布伦特实际上并不像人们认为的那样聪明绝顶。他每天需要处理大量计划外工作，即使布伦特天天加班都完不成堆积如山的任务，最终造成了大量的任务积压，战略工作不断延期，管理层疲于应付各种投诉。我相信大多数发展中组织里面都会有这么一个角色存在。</p>
<p>新上任的主人公（比尔）将布伦特识别为 IT 生产环境中的约束点，并采取了更改工作流转的方式来避免布伦特被计划外工作打扰：</p>
<ul>
<li>与 CEO 达成共识，调整布伦特的工作职责：允许他拒绝除凤凰项目（战略级）以外的任何工作；</li>
<li>设置资源防火墙，任何人需要“征用”他都必须经过其部门领导评估优先级，所有资源请求通过层层过滤才能达到布伦特；</li>
<li>围绕布伦特组建了一个二线梯队，负责学习他的工作经验、编写文档、甚至实现部分自动化，逐步替代布伦特处理任务，将布伦特从各种繁琐的事情中解放出来</li>
</ul>
<blockquote>
<p>可能他是故意让自己显得无可或缺，以免其他人抢了他的工作。… 是不是布伦特把他的知识看作一种权力。也许他身上的某些部分不愿意把那些知识交出来。这也确实让他成为了几乎难以取代的人。——《凤凰项目 一个IT运维的传奇故事》 第 107 页</p>
</blockquote>
<p>值得注意的是，新的决策在开始阶段需要承受了很大的压力。领导人需要对抗的是长期形成的工作惯性，俗话说“病来如山倒、病去如抽丝”，想要改变也不是一朝一夕就可以实现的，更不要说组织内部微妙的人事关系，稍有不慎就可能踩到雷，顺畅的内部沟通、群众看得到的改进效果可以帮助解决一部分问题，但是现实中也有不可避免的碰撞。所以说，流程变更实质是是组织文化重塑的一种形式，领导者的信任与合作必不可少。这方面也是本书比较有趣的地方。</p>
<p>经过一段时间的坚持，布伦特的工作效率大大提升，顺利完成了凤凰项目，并在后来发起的独角兽和独角鲸项目取得了成功。</p>
<h2 id="任务追踪"><a href="#任务追踪" class="headerlink" title="任务追踪"></a>任务追踪</h2><p>凤凰项目故事中，主人公面对的困境是：IT 团队因为大量工作积压而导致各种任务延期。</p>
<blockquote>
<p>这个世界一定是哪里不对劲了，一半邮件都是紧急邮件。所有事情都那么重要，这可能吗？</p>
</blockquote>
<p>经过一番梳理，IT 团队的各类工作内容大致可以分为以下四种类别：</p>
<ul>
<li>第一类：业务项目，由 PMO 跟踪的正式项目；</li>
<li>第二类：IT 内部项目，由业务项目衍生的基础架构项目，或者改进项目；（* 生产能力投放度量）</li>
<li>第三类：变更（* 跨团队交接和重复跟踪）</li>
<li>第四类：计划外工作（救火工作）</li>
</ul>
<p>计划外工作可不是免费的，恰恰相反，它非常昂贵。在故事的第一部分，计划外工作是最主要的困扰，它们包括突发严重故障、业务安全漏洞引发的舆论风波、部分领导人基于个人意愿追加的临时项目等等。如果要推动战略项目的进度，<strong>必须根除计划外工作的最大源头！</strong></p>
<blockquote>
<p>计划外工作会让你丧失开展计划内工作的能力，因此必须不惜一切代价去消灭计划外工作，墨菲法则确实存在，因此总会有计划外工作，但你必须高效地处理它们。</p>
<p>第一优先级是谁喊得最响，决定因素是谁能搬出最大的领导来。我见过很多员工总是优先为某个经理服务，因为他每月带他们出去吃一次午餐。</p>
</blockquote>
<p>为了改变这一局面，主人公采用了一种“可视化工作区+任务追踪系统”的方式管理变更。</p>
<h2 id="任务可视化"><a href="#任务可视化" class="headerlink" title="任务可视化"></a>任务可视化</h2><p>可视化的目的是为了做到充分的交流，就像风吹过树林，不分彼此的摇动每一片树叶。</p>
<h4 id="可视化工作区"><a href="#可视化工作区" class="headerlink" title="可视化工作区"></a>可视化工作区</h4><p>运营中心（NOC）：一个巨大的开放式办公区域，靠一面墙放着一排长桌，巨大的显示器上显示着所有IT服务的各种状态。1级和2级客服人员占据了工作站的三排位置。“这并不是阿波罗13号的太空飞行指挥中心，但我就是这样向亲戚们解释我的工作环境的。”</p>
<p>在 NOC 运作的具体支撑手段上，高度重视看板墙（Kanban）的作用。</p>
<p>看板(Kanban)是一种生产管理系统，起源于1940年代的丰田汽车公司。看板的核心理论是基于制造业中经常提到的概念：库存。与传统会计观念不同，丰田认为库存会带来成本以及浪费，而不是增加或储存价值，应鼓励逐步消除库存，以便削减生产流程中的成本，在管理中逐渐适应“零库存”的状态。1961 年 MIT（Sloan School of Management）教授 John Little 正式提出了利特尔法则（ Little’s Law ）：在一个稳定的系统 L中，长期的平均顾客人数，等于长期的有效抵达率，系统中的平均存货等于存货单位离开系统的比率（亦即平均需求率）与存货单位在系统中平均时间的乘积。</p>
<p><strong>Cycle Time = Work in Progress / Throughput</strong></p>
<p>根据利特尔法则，跟踪工作及进展的最重要的目标是：限制在制品（Work in process，WIP），例如尚未完成制造过程的商品，或是停留在库存仓库或是产线上，等待着进一步处理的商品。在 IT 语境中，半成品一般意味着积压的开发任务、等待启动的“重要不紧急”工作、“开发完成”但是未上线发布的新功能、等待执行的线上变更等等。</p>
<blockquote>
<p>看板上的索引卡片是做成这件事最好的机制之一，因为每个人都能看到半成品。—— 《凤凰项目 一个IT运维的传奇故事》第 151 页</p>
</blockquote>
<p>本书中关于看板（Kanban）实践的启示可以概括为以下几点：</p>
<ul>
<li>目标导向：相对于强化审批流程，更重要的是通过任务卡片的梳理识别半成品积压在哪个环节，通过建立一条反馈环路能够一直往回通向产品定义、设计及开发的最初环节。</li>
<li>简洁性：例如一张变更索引卡片只要求填写必需的三条信息：变更计划的制定者、将要实施变更的系统以及一条一句话的概述，避免设置过多的必填字段和无效选项。繁琐而缺乏人性考量的工具难以发挥作用，最终将变成 “大家为了完成自己的工作，一直在胡乱对付这套系统”，再也没有比阻止人们去做他们理应做的事更能毁掉大家的热情和支持了。</li>
<li>灵活性：针对需要特别关注的问题可以采取灵活方式，不拘泥于死板格式。例如在第一部分首席工程师（布伦特）是一个阶段性瓶颈，各部门在提交卡片的时候就将“是否需要布伦特支援”作为必填信息，或者使用单独一种颜色的卡片。</li>
</ul>
<p><strong>控制半成品的能力不足，是造成长期性延误和质量问题的根源之一。</strong> <strong>“完成”的真正定义</strong> 并非开发部完成了编码，而是只有在代码经过充分测试并按设计在生产中运行时，代码才算“完成”。</p>
<p>关于变更管理，还有一些具体的实践方法值得借鉴：</p>
<ul>
<li>分级授权：可以把一部分变更审核委派给代理人</li>
<li>脆弱变更：列出了十大最脆弱的服务、应用程序和基础架构列表，可能会影响到其中任何一个的变更申请都将立刻标上记号，由 CAB 详细审查</li>
<li>标准变更（ITIL 名称）：对于之前已多次成功实施的变更，我们只需要提前批准就行。它们仍然需要提交，但可以不经过我们批准就安排操作日程。”</li>
<li>外部影响变更：对于‘复杂的中等变更’ 变更提交者有责任向可能受到影响的人员进行咨询并得到其认可，做完这些之后才可以将变更卡片送入审核流程。</li>
<li>禁止条款（透明化）：禁止未经授权的变更，禁止在服务中断期间出现未经公开的变更。</li>
</ul>
<h2 id="改进日常工作"><a href="#改进日常工作" class="headerlink" title="改进日常工作"></a>改进日常工作</h2><blockquote>
<p>改进日常工作比开展日常工作更重要。</p>
</blockquote>
<h4 id="预防性维护"><a href="#预防性维护" class="headerlink" title="预防性维护"></a>预防性维护</h4><blockquote>
<p>技术债务。它来自于走捷径，那在短时间内也许行得通。但是就像金融债务一样，久而久之，利息成本会越滚越高。如果一个部门没有付清它的技术债务，公司的每一份努力都将以计划外工作的形式来偿还那些技术债务的利息。p186</p>
</blockquote>
<p>如果你是一家跨国货运公司，你们用一百辆卡车组成的车队运送包裹，你们的一项公司目标就会是客户满意度和按时交货。一个影响按时交货的因素是车辆故障。车辆故障的一个关键起因是没有更换机油。那么，为了降低这个风险，你就要为车辆运营建立一个服务等级协议（SLA），每行驶五千英里就要更换一次机油。如果说按时交货是关键绩效指标（KPI），那么为了达到这个指标可以建立一个新的前瞻性KPI，比如说，已经按要求更换机油的车辆百分比。</p>
<p>对于 IT 组织来说，这一原则同样适用。</p>
<h2 id="两个反常识的概念"><a href="#两个反常识的概念" class="headerlink" title="两个反常识的概念"></a>两个反常识的概念</h2><h4 id="系统里要经常出些故障"><a href="#系统里要经常出些故障" class="headerlink" title="系统里要经常出些故障"></a>系统里要经常出些故障</h4><p>作者在书中提到一个观点：“系统里要经常出些故障，长此以往，再遇到困难就没有原来那么痛苦了。p216”  </p>
<p>1960 年代，工业制造领域提出了弹性制造系统（Flexible Manufacturing System，FMS）的概念。FMS 的理想是制造系统能够富有弹性（能够因应预期或不可预期的变更），又兼有自动化设备规模生产的特性，以满足顾客对于产品要求多样化的趋势。制造系统的弹性通常被分为两类：</p>
<ul>
<li>“机器弹性”：涵盖了系统制造新产品的应变能力和零件工序改变的应变能力；</li>
<li>“用途弹性”：同一组件可以使用不同机器设备而运行相同的工序之。</li>
</ul>
<p>于 IT 生产而言，就有了弹性系统，即面对各种不确定场景时（如基础存储设施故障，恶意攻击，依赖服务故障，网络超时、中断等等）都能够存活并且具备一定的自愈能力的系统。弹性系统的出发点是承认在规模化服务的场景下，故障是常态的、不可预测的，既然不可避免，就需要在系统的生命周期去主动管理它，可以主动地给系统不断施加一些压力，从而不断强化习惯并加以改进。</p>
<p><strong>Do not try to avoid failures !  Embrace them !</strong></p>
<p>具体策略方面，可以将改进周期设定为小段时间，例如每次为期两周，每期都实施一个小型的改进项目，例如周期性的服务中断演练。每次日常改进都需要覆盖“设计—检测—恢复—预防”的各个环节，只有不断重复才能建立信任感和透明度，对需要团队合作的事情来说尤其如此。</p>
<blockquote>
<p>建立起部落文化般的工作共识，这帮助我们比以往任何时候都能够更快地排除故障，而且，一旦真的需要把工作升级，也是可控而有序的。p263</p>
</blockquote>
<h4 id="人力资源使用率与效率成反比"><a href="#人力资源使用率与效率成反比" class="headerlink" title="人力资源使用率与效率成反比"></a>人力资源使用率与效率成反比</h4><p>每个人都需要空闲时间，或者说松弛时间。如果大家都没有松弛时间，半成品就会卡在系统里。或者更确切地说，卡在队列里，只是干等着。</p>
<p><img src="http://ombx24fbq.bkt.clouddn.com/DevOps-%E8%B5%84%E6%BA%90%E5%BF%99%E7%A2%8C%E7%99%BE%E5%88%86%E6%AF%94.png" alt="资源忙碌百分比"></p>
<p>图表说明：横坐标轴上是给定资源的忙碌百分比，纵坐标轴上是大致的等待时间（更确切地说是队列长度）。曲线的形状表明，当资源使用率超过80%时，等待时间就会直线上升。</p>
<p><strong>等待时间取决于资源使用率</strong>。如果一个资源的忙碌时间是50%，那么它的空闲时间也是 50%。等待时间就是50%除以50%，也就是一个时间单位（可以简化理解为 1 个小时）。另一方面，如果一个资源 90% 的时间是忙碌的，等待时间=90% /10%，也就是说至少 9 个小时。换言之，任务排队等待的时间，将是资源有 50% 空闲时的 9 倍。</p>
<p>例如，小说中的技术大拿（布伦特），30分钟的简单变更需要耗费几个星期才能完成。原因很简单，作为所有工作的瓶颈，布伦特的使用率一直是100%甚至超过100%，因此，每次交给他的工作都只能在队列里枯等，如果不进行加速或升级处置，就永远不会完成。</p>
<p>再进一步，如果简单任务实际需要 5 个以上交接步骤（分析、设计、程序、测试、发布、线上变更等），情况又会如何呢？假设所有工作中心都有 90% 的时间是忙碌的，由图上可知，在每一个工作中心的平均等待时间是 9 个小时。总共等待时间就是 5倍：45 个小时。高资源使用率带来的破坏性结果恐怕也就无需多言了。</p>
<p>因此，削减非必要人工环节、管理交接工作是提高资源周转率的关键。</p>
<h2 id="安全与审计"><a href="#安全与审计" class="headerlink" title="安全与审计"></a>安全与审计</h2><blockquote>
<p>信息安全部总是到处亮出他们的“尚方宝剑”，提出各种紧急要求，全然不顾这样做对其他部门造成的后果，因此我们有很多会议都不邀请他们参加。只要有他们在，事情肯定办不成。p35</p>
<p>一些最英明的审计师说，只有三种内部控制目标：确保财务报告的可靠性，符合法律法规，以及运营的效率和效果。就是这样。你和约翰所谈论的正是所谓‘COSO立方’（内部控制整合框架）的不同面。” p241</p>
</blockquote>
<p>本书故事中着重探讨了信息安全与审计工作，例如技术部门与内部审计部门的矛盾冲突、将安全审计置于开发构建过程之中等挺有意思的。这块比较复杂，以后再补充。</p>
<h2 id="IT-价值流：像电力一样无处不在"><a href="#IT-价值流：像电力一样无处不在" class="headerlink" title="IT 价值流：像电力一样无处不在"></a>IT 价值流：像电力一样无处不在</h2><blockquote>
<p>IT 不只是一个部门。相反，它就像电力一样无处不在。IT 是一种技能，就像能读会算一样。在无极限零部件公司，我们没有一个集中的阅读或计算部门——我们希望每一个雇员都多少掌握这些技能。理解技术能够做什么、不能做什么，已经成为这家公司里每个部门必须具备的一种核心竞争力。要是业务经理领导了一个不具备这种技能的团队或项目，他们就会失败。——《凤凰项目 一个IT运维的传奇故事》第 316 页</p>
</blockquote>
<h2 id="扩展阅读：DevOps-漫谈系列"><a href="#扩展阅读：DevOps-漫谈系列" class="headerlink" title="扩展阅读：DevOps 漫谈系列"></a>扩展阅读：<a href="https://riboseyim.github.io/2016/07/28/DevOps/" target="_blank" rel="external">DevOps 漫谈系列</a></h2><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/" target="_blank" rel="external">《凤凰项目》：从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/" target="_blank" rel="external">Kanban 看板管理实践</a></li>
<li><a href="https://riboseyim.github.io/2018/03/26/DevOps-Deployment/" target="_blank" rel="external">DevOps 漫谈：基础设施部署和配置管理</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/" target="_blank" rel="external">Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/" target="_blank" rel="external">工程师的自我修养：全英文技术学习实践</a></li>
</ul>
<h4 id="DevOps-实践的本质是文化"><a href="#DevOps-实践的本质是文化" class="headerlink" title="DevOps 实践的本质是文化"></a><a href="https://riboseyim.github.io/2018/03/29/DevOps-Culture/" target="_blank" rel="external">DevOps 实践的本质是文化</a></h4><ul>
<li>学习力－团队生命之根</li>
<li>带领团队翻译书籍</li>
<li>Don’t make me think</li>
<li>凡是被很多人不断重复的好习惯，要将其自动化整合到工具</li>
</ul>
<h2 id="扩展阅读：凤凰项目作者推荐书单"><a href="#扩展阅读：凤凰项目作者推荐书单" class="headerlink" title="扩展阅读：凤凰项目作者推荐书单"></a>扩展阅读：凤凰项目作者推荐书单</h2><ul>
<li>《The DevOps Cookbook》(开发运维指导书)</li>
<li><a href="https://book.douban.com/subject/6862062/" target="_blank" rel="external">《持续交付：发布可靠软件的系统方法》</a></li>
</ul>
<h4 id="《目标：一种持续改进的流程》"><a href="#《目标：一种持续改进的流程》" class="headerlink" title="《目标：一种持续改进的流程》"></a>《目标：一种持续改进的流程》</h4><p>1984年，埃利亚胡·高德拉特博士撰写了他的重要著作《目标：一种持续改进的流程》（The Goal: A Process of On going Improvement）。这是一本苏格拉底式的小说，主人公是一位名叫亚历克斯·罗戈的工厂经理，他必须在90天内解决成本和按时交货的问题，否则他的工厂就要被关停。</p>
<p>高德拉特博士在他的后一本书 <strong>《绝不是靠运气》（It’s Not Luck）</strong> 中，阐述了他称之为“思维过程”的内容。那是一套了不起的方法论（但是多少有些难以做到，且往往见效缓慢），主要是教公司如何识别长期的核心冲突、了解现状、描述理想的未来状况，以及多种提高成功可能性的策划技巧。</p>
<ul>
<li>华盛顿州立大学网站“EM526 约束管理”（课程），<a href="http://public.wsu.edu/~engrmgmt/holt/em530/index.htm" target="_blank" rel="external">http://public.wsu.edu/~engrmgmt/holt/em530/index.htm</a></li>
<li>学习“思维过程”的教科书《逻辑化思维过程》，作者H.威廉·德特曼博士。</li>
</ul>
<h4 id="《丰田管理：为了获得改进、适应性和优异业绩而管理员工》"><a href="#《丰田管理：为了获得改进、适应性和优异业绩而管理员工》" class="headerlink" title="《丰田管理：为了获得改进、适应性和优异业绩而管理员工》"></a>《丰田管理：为了获得改进、适应性和优异业绩而管理员工》</h4><ul>
<li>Toyota Kata : Managing People for Improvement , Adaptive nessand SuperiorResults</li>
</ul>
<h4 id="《团队领导的五大障碍：关于领导力的寓言》"><a href="#《团队领导的五大障碍：关于领导力的寓言》" class="headerlink" title="《团队领导的五大障碍：关于领导力的寓言》"></a>《团队领导的五大障碍：关于领导力的寓言》</h4><ul>
<li>The Five Dysfunction sofa Team : A Leader ship Fable</li>
<li>作者：帕特里克·兰西奥尼</li>
</ul>
<p>团队达成目标的一个核心诱因是信任缺失。在他的模型中，五大障碍被描述为：</p>
<ul>
<li>信任缺失——不愿在团队中显示弱点；</li>
<li>惧怕冲突——在充满激情的建设性辩论中寻求和谐的假象；</li>
<li>缺乏诚意——假意与团队的决策达成一致，形成模棱两可的公司氛围；</li>
<li>回避问责——面对员工的失职行为，逃避追责，降低了工作标准；</li>
<li>忽视结果——对个人成就、地位和自我价值的关注超过了对团队成功的关注。</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://book.douban.com/subject/26644070/" target="_blank" rel="external">豆瓣|《凤凰项目|The Phoenix Project》</a></li>
<li><a href="http://ijyun.github.io/2016/04/23/phoenix-project.html" target="_blank" rel="external">《凤凰项目》内容梳理|龙井的博客</a></li>
<li><a href="https://researchcenter.paloaltonetworks.com/2016/10/phoenix-project-novel-devops-helping-business-win/" target="_blank" rel="external">The Cybersecurity Canon: The Phoenix Project: A Novel About IT, DevOps, and Helping Your Business Win</a></li>
<li><a href="http://news.sciencenet.cn/htmlnews/2011/6/248411.shtm" target="_blank" rel="external">以色列物理学家、约束理论创始人埃利亚胡·戈德拉特逝世 | 2011 年</a></li>
<li><a href="http://www.itdks.com/dakalive/detail/796" target="_blank" rel="external">弹性工程-构建弹性系统|曾绿麟|美团</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;背景：《凤凰项目》的灵魂&lt;/li&gt;
&lt;li&gt;管理约束：最大的瓶颈是人&lt;/li&gt;
&lt;li&gt;任务追踪：可视化工作区和看板实践&lt;/li&gt;
&lt;li&gt;改进日常工作：预防性维护&lt;/li&gt;
&lt;li&gt;反常识：系统里要经常出些故障、人力资源使用率与效率成反比&lt;/li&gt;
&lt;li&gt;安全与审计&lt;/li&gt;
&lt;li&gt;IT 价值流：像电力一样无处不在&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;转变主要不是基于自动化，相反，这种不可思议的改进来自于调整关于工作系统的策略和控制半成品的策略，确保有一个高效的跨职能团队，让所有事情都为约束点服务，以及管理好工作交接。——《凤凰项目 一个IT运维的传奇故事》&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="最佳工程实践" scheme="http://riboseyim.github.com/tags/%E6%9C%80%E4%BD%B3%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
      <category term="DevOps" scheme="http://riboseyim.github.com/tags/DevOps/"/>
    
      <category term="Manager" scheme="http://riboseyim.github.com/tags/Manager/"/>
    
  </entry>
  
  <entry>
    <title>古典音乐低俗史</title>
    <link href="http://riboseyim.github.com/2018/04/10/Artistic-Classical/"/>
    <id>http://riboseyim.github.com/2018/04/10/Artistic-Classical/</id>
    <published>2018-04-10T06:09:52.000Z</published>
    <updated>2018-04-24T02:53:37.372Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>古典音乐低俗史</li>
<li>古典音乐经典名曲</li>
</ul>
<a id="more"></a>
<h2 id="古典音乐低俗史"><a href="#古典音乐低俗史" class="headerlink" title="古典音乐低俗史"></a>古典音乐低俗史</h2><p><img src="http://ot6idm48o.bkt.clouddn.com/IMG_4743.png" alt=""></p>
<blockquote>
<p>“没有音乐，生活将是一种错误。” —— 尼采</p>
</blockquote>
<p>今年的3月25日，是法国现代最伟大的音乐家、被称为“现代音乐之父”的阿希尔-克洛德·德彪西（Achille-Claude Debussy，1862－1918）逝世100周年。德彪西在生前已享誉厚载，是法兰西学院院士，是鲜有的头像被印在法郎纸币上的法国音乐家之一。</p>
<p>德彪西的作品在传统法国音乐风格中，结合了东方音乐、西班牙舞曲和爵士乐的特点，创造出了其别具一格的和声。德彪西被总括为印象派音乐的代表，虽然他本人并不同意，甚至设法远离这一称谓。德彪西的一生经历的女性数不胜数，其中至少两次发生自杀事件：</p>
<ul>
<li>玛丽·布兰奇·瓦斯尼尔：年长德彪西十一岁的人妻；</li>
<li>加布里埃尔·杜邦（加比，Gaby）：与德彪西同甘共苦以支持家用，但是被德彪西无情抛弃，引发了自杀风波；</li>
<li>特蕾丝·罗杰：32岁的女歌手，突然宣布结婚但是在婚礼和婚房都准备完毕时发现了加比的存在，单方面宣布解除婚约；</li>
<li>莉莉（Lily）: 女性服装店模特，比德彪西小十一岁；她生病时德彪西与爱玛私奔，企图用手枪自杀（未遂）；</li>
<li>爱玛（Emma)：德彪西的钢琴学生的母亲，富裕的银行家的妻子，与德彪西同龄；在世人眼中，他们的关系只是为了金钱。</li>
</ul>
<p>《春之祭》（Le Sacre du Printemps）是俄罗斯作曲家伊戈尔·斯特拉文斯基的代表作与成名作。全曲粗犷而又有浓郁的俄罗斯风格，是二十世纪古典音乐创作的典范。斯特拉文斯基幻想出一个俄罗斯远古时期的祭祖仪式景象：“我想像到一个肃穆的异教祭典：一群长老围成一圈坐着，看见一位少女被要求跳舞直至跳死。她是他们用以祭祀春天之神的祭品。”</p>
<p><img src="http://ot6idm48o.bkt.clouddn.com/IMG_4746.png" alt=""></p>
<p>音乐史上，《春之祭》的首演便是一场著名的骚乱。</p>
<p>1913 年巴黎香榭丽舍剧院举行首演时，狂乱的节奏及旋律，颠覆传统芭蕾的舞步，都让观众陷入疯狂，支持者和反对者在席间互相叫嚣，甚至大打出手：从管弦乐团的序奏开始，观众席上不满的声音便此起彼伏、骂声不断，强烈的抗议声和对抗议声的抗议声竞相交错，嘘声、口哨、踏步声、拍手声不绝于耳。</p>
<p><img src="http://ot6idm48o.bkt.clouddn.com/IMG_4747.png" alt=""></p>
<p>巴洛克时代，最优秀的乐团一般由教会与贵族赞助。贵族在乡村建立城堡或宫殿，并雇用一支常驻乐队来凸显自身品味，甚至还有宫廷御用的乐队作曲家写作大量新乐曲，歌剧也日益流行。1781年，莱比锡布商大厦管弦乐团成立，标志着市民管弦乐团的开始，1842年，著名的纽约爱乐乐团和维也纳爱乐乐团陆续成立。19世纪这种属于中产市民(在贵族或教会眼中，他们大概也是粗俗、缺乏教养的同义词）的乐队形式随着城市中产阶级崛起而发展迅速。</p>
<p>然而，观众席中有一个人（可可·香奈儿）注意到了这位被观众的喧哗沉重打击的音乐天才，电影<a href="https://movie.douban.com/subject/3172300/" target="_blank" rel="external">《香奈儿秘密情史》</a> 中完美重现了这一场景。</p>
<p><img src="http://ot6idm48o.bkt.clouddn.com/IMG_4748.png" alt=""></p>
<blockquote>
<p>“音乐表现越是本质、单纯，效果也就越直接、强烈。”  —— 奥尔夫</p>
</blockquote>
<p>《布兰诗歌》源自德国巴伐利亚的布兰修道院（Burana，始建于公元 740 年）中发现的一本 13 世纪手稿 —— 由神职人员、落魄文人和流浪学生们用拉丁文和中世纪德语记录的诗歌集，20 世纪由作曲家卡尔·奥尔夫编写成曲。</p>
<p>这首曲中所唱的题材无外乎三个：春、酒还有求爱。比如第 14 曲 “我在酒吧的时候”，歌词极其简单粗暴：</p>
<blockquote>
<p>太太喝，先生喝；<br>大兵喝，牧师喝；<br>男人喝，女人喝；<br>白人喝，黑人喝；<br>成家立业的喝，漂泊无依的喝；<br>蠢东西喝，聪明人喝，穷鬼同病夫喝……</p>
</blockquote>
<p>可以说，这是一首相当享乐的音乐。有关《求爱》的歌词也是类似的内容，马力全开。放荡不羁的精神,对放浪形骸的生活方式的赞美以及对封建社会的无情嘲讽都令人惊讶。毫无疑问，这些被称作”中世纪的拉丁抒情诗”的作品出现在以基督教文化为中心的时代，不能不说是一个奇迹。</p>
<p>如果考虑到此曲创作于 1937 年的纳粹德国，这样欲望全开的歌词或许就是真实的表现。（注：  1937年7月19日，“堕落艺术展”在慕尼黑举行。这个展览是纳粹对现代艺术发起的最猛烈的攻击。展览将超过650件著名的绘画、雕塑和版画集中展出，向观众将其污蔑为“堕落”的，是应当被净化的“渣滓”。）</p>
<blockquote>
<p>德国人有着一种好沉思深省的内向之感，喜幻想，多情善感；毫无疑问，正是这种性格使他们特别喜爱一种排除一切外在的兴趣而本身具备自我发展的基本要素的音乐。—— 《西方音乐史》【法】保·朗多尔米</p>
</blockquote>
<h2 id="古典音乐经典名曲"><a href="#古典音乐经典名曲" class="headerlink" title="古典音乐经典名曲"></a>古典音乐经典名曲</h2><h4 id="奥尔夫（Orff）《Carmina-Burana-布兰诗歌》"><a href="#奥尔夫（Orff）《Carmina-Burana-布兰诗歌》" class="headerlink" title="奥尔夫（Orff）《Carmina Burana|布兰诗歌》"></a>奥尔夫（Orff）《Carmina Burana|布兰诗歌》</h4><p>拥有强力而单纯的节奏和明快的旋律，乐曲、歌词潇洒。</p>
<h4 id="肖邦（Chopin）《Trois-Valses-Op-64-No-1-小狗圆舞曲》-1846-1847"><a href="#肖邦（Chopin）《Trois-Valses-Op-64-No-1-小狗圆舞曲》-1846-1847" class="headerlink" title="肖邦（Chopin）《Trois Valses Op.64 No.1 | 小狗圆舞曲》 1846-1847"></a>肖邦（Chopin）《Trois Valses Op.64 No.1 | 小狗圆舞曲》 1846-1847</h4><ul>
<li>法语：Trois Valses，在英语中也被称为 “Minute Waltz”</li>
</ul>
<p>肖邦是钢琴诗人，在世人眼前浮现出来的是纤细而病弱的王子形象，较受女性欢迎。</p>
<p>通常的说法，肖邦是看到他的情人作家乔治·桑（George Sand）所养的一只小狗追着自己尾巴团团转的场景创作《小狗圆舞曲》，肖邦将作品献给了德费努·波特卡（Delfina Potocka）伯爵夫人。</p>
<h4 id="肖邦（Chopin）《Fantasie-Impromptu-in-C-Sharp-Minor-Op-66-幻想即兴曲》"><a href="#肖邦（Chopin）《Fantasie-Impromptu-in-C-Sharp-Minor-Op-66-幻想即兴曲》" class="headerlink" title="肖邦（Chopin）《Fantasie Impromptu in C Sharp Minor Op.66 | 幻想即兴曲》"></a>肖邦（Chopin）《Fantasie Impromptu in C Sharp Minor Op.66 | 幻想即兴曲》</h4><p>《幻想即兴曲》原本是不会面世的一首作品，曲名是后人命名，肖邦留下遗言：“在我死后请烧掉曲谱。”<br>开头的旋律美妙动人，飘荡着肖邦曲目特有的浪漫情怀。虽然甜美而热情，但也微微感到心痛。这所曲子背后肯定有一个心酸的故事，难怪肖邦本人不喜欢呵。</p>
<h4 id="舒曼（Schumann）《Violin-Concerto-In-D-Minor-D小调小提琴协奏曲》"><a href="#舒曼（Schumann）《Violin-Concerto-In-D-Minor-D小调小提琴协奏曲》" class="headerlink" title="舒曼（Schumann）《Violin Concerto In D Minor | D小调小提琴协奏曲》"></a>舒曼（Schumann）《Violin Concerto In D Minor | D小调小提琴协奏曲》</h4><p>舒曼是一位苦恼的艺术家形象。晚年精神失常，跳过莱茵河（又被人捞上来）、在精神病疗养院度过晚年。作品中充满了舒曼独特而浓厚的浪漫情结，第二乐章的旋律高贵而优雅。<br>舒曼创作此曲用了2周时间，直到首次公演却过了 80 年。如果不是 1937 年，在柏林图书馆中约阿希姆的藏书中发现了乐谱，恐怕将永远被埋没。</p>
<h4 id="舒伯特（Franz-Schubert）《Schubert-Symphony-No-8-in-b-minor-D-759-未完成》"><a href="#舒伯特（Franz-Schubert）《Schubert-Symphony-No-8-in-b-minor-D-759-未完成》" class="headerlink" title="舒伯特（Franz Schubert）《Schubert Symphony No.8 in b minor D.759 | 未完成》"></a>舒伯特（Franz Schubert）《Schubert Symphony No.8 in b minor D.759 | 未完成》</h4><p>《未完成》真的是一部“未完成”的作品，在磁带时期的经典组合：A 面是贝多芬的《命运》，B 面则是《未完成》。</p>
<h4 id="柴可夫斯基（Tchaikovsky）《The-Nutcracker-胡桃夹子》"><a href="#柴可夫斯基（Tchaikovsky）《The-Nutcracker-胡桃夹子》" class="headerlink" title="柴可夫斯基（Tchaikovsky）《The Nutcracker | 胡桃夹子》"></a>柴可夫斯基（Tchaikovsky）《The Nutcracker | 胡桃夹子》</h4><blockquote>
<p>芭蕾是沉默的。相对于管弦乐团的“谈谈阔论”，登场人物却不发一言。相对的，舞者们犹如否定中立的存在一般轻快地舞蹈。—— 【日】饭尾洋一 《古典音乐说明书》 p101</p>
</blockquote>
<h4 id="斯特拉文斯基（Stravinsky）《The-Rite-of-Spring-春之祭》（芭蕾音乐，1913）"><a href="#斯特拉文斯基（Stravinsky）《The-Rite-of-Spring-春之祭》（芭蕾音乐，1913）" class="headerlink" title="斯特拉文斯基（Stravinsky）《The Rite of Spring | 春之祭》（芭蕾音乐，1913）"></a>斯特拉文斯基（Stravinsky）《The Rite of Spring | 春之祭》（芭蕾音乐，1913）</h4><p>本来是一部芭蕾舞剧，但后来脚本遗失，只剩下管弦乐总谱。</p>
<h4 id="拉威尔（Joseph-Maurice-Ravel）《Concerto-pour-la-main-gauche-D大调左手钢琴协奏曲》"><a href="#拉威尔（Joseph-Maurice-Ravel）《Concerto-pour-la-main-gauche-D大调左手钢琴协奏曲》" class="headerlink" title="拉威尔（Joseph-Maurice Ravel）《Concerto pour la main gauche | D大调左手钢琴协奏曲》"></a>拉威尔（Joseph-Maurice Ravel）《Concerto pour la main gauche | D大调左手钢琴协奏曲》</h4><p>约瑟夫-莫里斯·拉威尔（法语：Joseph-Maurice Ravel，1875年3月7日－1937年12月28日），法国作曲家和钢琴家。生于法国南部靠近西班牙的山区小城西布勒，1937年在巴黎逝世时，已经是法国乐坛中与克劳德·德彪西齐名的印象乐派作曲家。</p>
<p>与“两手”的协奏曲相比，“左手”的音乐构想更加严谨而独到。既有苦恼，又有诗歌般的情绪及幽默。<br>值得一提的是，拉威尔本人在谱曲完成后立刻进行了试演出，但未能仅使用左手弹奏，而是用了双手。</p>
<h4 id="拉威尔（Joseph-Maurice-Ravel）《Bolero-波莱罗舞曲》"><a href="#拉威尔（Joseph-Maurice-Ravel）《Bolero-波莱罗舞曲》" class="headerlink" title="拉威尔（Joseph-Maurice Ravel）《Boléro | 波莱罗舞曲》"></a>拉威尔（Joseph-Maurice Ravel）《Boléro | 波莱罗舞曲》</h4><ul>
<li>法语名称：Boléro，<br>1928 年拉威尔创作《波莱罗舞曲》的时候已经 53 岁。波莱罗舞曲原本指西班牙舞曲中的一种。使用小军鼓作为开篇，这个节奏重复了 169 次，持续 15 分钟有余。</li>
</ul>
<p>情节：在西班牙的一个小酒店里，一个少女在翩翩起舞。开始时她只是缓缓跳动，舞姿优美而轻盈。随着音乐的逐渐热烈，舞蹈也越来越欢快奔放，迷住了在场的人们。他们开始随着音乐打着节拍助兴，并情不自禁地与少女一起欢舞，最后在狂欢的气氛中结束。</p>
<h4 id="伦纳德·伯恩斯坦（Leonard-Bernstei）《Candide-Overture-老实人·序曲》"><a href="#伦纳德·伯恩斯坦（Leonard-Bernstei）《Candide-Overture-老实人·序曲》" class="headerlink" title="伦纳德·伯恩斯坦（Leonard Bernstei）《Candide Overture| 老实人·序曲》"></a>伦纳德·伯恩斯坦（Leonard Bernstei）《Candide Overture| 老实人·序曲》</h4><p>原本是作为音乐剧的开幕音乐创作。开场号角齐鸣，充满了沸腾般的跃动感，整曲精力充沛、一气呵成。</p>
<h4 id="约翰·施特劳斯二世-Johann-Baptist-Strauss-《An-der-schonen-blauen-Donau-op-314-蓝色多瑙河》"><a href="#约翰·施特劳斯二世-Johann-Baptist-Strauss-《An-der-schonen-blauen-Donau-op-314-蓝色多瑙河》" class="headerlink" title="约翰·施特劳斯二世(Johann Baptist Strauss) 《An der schönen blauen Donau op.314 | 蓝色多瑙河》"></a>约翰·施特劳斯二世(Johann Baptist Strauss) 《An der schönen blauen Donau op.314 | 蓝色多瑙河》</h4><ul>
<li>德语：An der schönen blauen Donau Op.314<br>实际上多瑙河既不清、也不美，不怎么蓝，浑浊中混杂着绿色，一如普奥战争惨败后帝国首都维也纳市民哀叹的心境。<br>据说有了此曲之后，多瑙河两岸的人们才蓦然发现，原来多瑙河是“蓝色的”。Amazing !</li>
</ul>
<h4 id="贝多芬（Ludwig-van-Beethoven）《The-Symphony-No-9-in-D-minor-Op-125-第九交响曲》"><a href="#贝多芬（Ludwig-van-Beethoven）《The-Symphony-No-9-in-D-minor-Op-125-第九交响曲》" class="headerlink" title="贝多芬（Ludwig van Beethoven）《The Symphony No.9 in D minor, Op.125 | 第九交响曲》"></a>贝多芬（Ludwig van Beethoven）《The Symphony No.9 in D minor, Op.125 | 第九交响曲》</h4><p>《第九交响曲》不仅仅需要管弦乐团进行演奏，还需要合唱和独唱，是超过 1 个小时的巨作。该曲在世界文化界有相当重要的地位，尤其该曲第四乐章部分乐段经指挥家赫伯特·冯·卡拉扬整理后，以《欢乐颂》（Ode to Joy）之名成为欧洲联盟的官方盟歌。</p>
<p><img src="http://ot6idm48o.bkt.clouddn.com/IMG_4742.png" alt=""></p>
<h4 id="埃尔加（Edward-William-Elgar）《Pomp-and-Circumstance-Marches-Op-39-威风堂堂进行曲》"><a href="#埃尔加（Edward-William-Elgar）《Pomp-and-Circumstance-Marches-Op-39-威风堂堂进行曲》" class="headerlink" title="埃尔加（Edward William Elgar）《Pomp and Circumstance Marches Op.39 | 威风堂堂进行曲》"></a>埃尔加（Edward William Elgar）《Pomp and Circumstance Marches Op.39 | 威风堂堂进行曲》</h4><p>这首曲子经常在足球赛场上听到。英格兰许多球队的球迷都会高歌“希望与荣光之地”来鼓舞选手。</p>
<h4 id="瓦格纳（Wilhelm-Richard-Wagner）《Wedding-March-婚礼进行曲》"><a href="#瓦格纳（Wilhelm-Richard-Wagner）《Wedding-March-婚礼进行曲》" class="headerlink" title="瓦格纳（Wilhelm Richard Wagner）《Wedding March | 婚礼进行曲》"></a>瓦格纳（Wilhelm Richard Wagner）《Wedding March | 婚礼进行曲》</h4><p>有名的婚礼进行曲有两种。一首是瓦格纳的婚礼进行曲，庄严肃穆；另一首是门德尔松的婚礼进行曲，华丽而隆重、充满祝福。</p>
<p>瓦格纳的作品是在歌剧《罗恩格林》中女主人公埃尔莎和天鹅骑士的婚礼上演奏的，代表了分离与死亡。门德尔松的看起来更吉利一些，但是，瓦格纳的故事隐喻“婚后才第一次知道对方是怎样的人”，似乎更有深意。</p>
<h4 id="帕赫贝尔（Johann-Pachelbel）《Canon-in-D-Major-卡农》"><a href="#帕赫贝尔（Johann-Pachelbel）《Canon-in-D-Major-卡农》" class="headerlink" title="帕赫贝尔（Johann Pachelbel）《Canon in D Major | 卡农》"></a>帕赫贝尔（Johann Pachelbel）《Canon in D Major | 卡农》</h4><p>作者死后200年的1919年才首次出版，过了三个世纪以上才得以成名的最强古典乐。</p>
<h4 id="萨蒂（Erik-Satie）《Gymnopedie-裸体歌舞》第一首"><a href="#萨蒂（Erik-Satie）《Gymnopedie-裸体歌舞》第一首" class="headerlink" title="萨蒂（Erik Satie）《Gymnopédie |裸体歌舞》第一首"></a>萨蒂（Erik Satie）《Gymnopédie |裸体歌舞》第一首</h4><p>治愈系经典作品。慵懒的旋律缓缓流淌，非常适合大脑一片空白，边发呆边听的音乐。</p>
<h4 id="巴赫《Goldberg-Variationen，BWV-988-哥德堡变奏曲》"><a href="#巴赫《Goldberg-Variationen，BWV-988-哥德堡变奏曲》" class="headerlink" title="巴赫《Goldberg-Variationen，BWV 988 | 哥德堡变奏曲》"></a>巴赫《Goldberg-Variationen，BWV 988 | 哥德堡变奏曲》</h4><p>据说是凯瑟琳伯爵拜托巴赫写一首适合在失眠夜听的曲子。巴赫应其要求，创作了这首超长的变奏曲大作。<br>开篇的咏叹调平稳安详，但之后的部分却洋溢着刺激旋律，听这样的曲子真的会困吗？</p>
<h4 id="普罗科菲耶夫（Sergei-Sergeyevich-Prokofiev）《Cinderella-Op-87-灰姑娘》华尔兹"><a href="#普罗科菲耶夫（Sergei-Sergeyevich-Prokofiev）《Cinderella-Op-87-灰姑娘》华尔兹" class="headerlink" title="普罗科菲耶夫（Sergei Sergeyevich Prokofiev）《Cinderella,Op.87 | 灰姑娘》华尔兹"></a>普罗科菲耶夫（Sergei Sergeyevich Prokofiev）《Cinderella,Op.87 | 灰姑娘》华尔兹</h4><p>普罗科菲耶夫是“遵从旧古典乐芭蕾的传统”谱写了《灰姑娘》，这首曲子用于灰姑娘出发去舞会之前的场景，在舞会舞蹈前，华尔兹已抢先开始演奏。</p>
<p>1941 年普罗科菲耶夫抛妻弃子，选择了 25 岁的女作家米拉·门德尔松（Mira Mendelson）。1948 年他被指责犯上了“形式主义的错误”，并被要求要注意作品的“民族性”。这件事影响了普罗科菲耶夫的健康，他的第一任夫人丽娜也因间谍嫌疑被捕（丽娜生于西班牙，在美国长大），并被判处在劳动营服役 20 年的重刑。</p>
<p>1953年3月5日普罗科菲耶夫去世，讽刺的是，正是当日，苦难大施主斯大林也逝世。普罗科菲耶夫曾被授予“斯大林奖”，死后被追授“列宁奖”。</p>
<h4 id="德彪西（Achille-Claude-Debussy）《Children’s-Corner-儿童乐园》"><a href="#德彪西（Achille-Claude-Debussy）《Children’s-Corner-儿童乐园》" class="headerlink" title="德彪西（Achille-Claude Debussy）《Children’s Corner | 儿童乐园》"></a>德彪西（Achille-Claude Debussy）《Children’s Corner | 儿童乐园》</h4><p>钢琴曲集《儿童乐园》是为了德彪西刚刚 3 岁的 Chou-Chou 而作的。作品充满了温柔和幽默，还添上了给女儿的献词，连封面的设计都充满了爱意。</p>
<h4 id="巴达捷夫斯卡（Tekla-Badarzewska-Baranowska）《Modlitwa-dziewicy-少女的祈祷》钢琴独奏"><a href="#巴达捷夫斯卡（Tekla-Badarzewska-Baranowska）《Modlitwa-dziewicy-少女的祈祷》钢琴独奏" class="headerlink" title="巴达捷夫斯卡（Tekla Bądarzewska-Baranowska）《Modlitwa dziewicy | 少女的祈祷》钢琴独奏"></a>巴达捷夫斯卡（Tekla Bądarzewska-Baranowska）《Modlitwa dziewicy | 少女的祈祷》钢琴独奏</h4><p>仅有的一首由真正的少女创作的“少女名曲”。巴达捷夫斯卡创作的时候年仅 17 岁，1861 年，年仅 27 岁的巴达捷夫斯卡留下丈夫和 5 个孩子去世了。</p>
<h4 id="奥涅格（Arthur-Honegger，港译：康涅格）《Pacific-231-太平洋-231-》"><a href="#奥涅格（Arthur-Honegger，港译：康涅格）《Pacific-231-太平洋-231-》" class="headerlink" title="奥涅格（Arthur Honegger，港译：康涅格）《Pacific 231 | 太平洋 231 》"></a>奥涅格（Arthur Honegger，港译：康涅格）《Pacific 231 | 太平洋 231 》</h4><p>瑞士作曲家奥涅格（Arthur Honegger）是一位热衷于铁道的作曲家。他有一句名言，“就像其他人喜爱女性和马那样，我爱着电车”。奥涅格在交响乐《太平洋 231》中用管弦乐队还原了蒸汽列车，通过节奏变化演绎出加速感，“231” 表示的是车轴配置，前轮、动轮、辅助轮的数量分别是2个、3个、1个。</p>
<h4 id="哈恰图良（Aram-Il’yich-Khachaturian）《Sabre-Dance-马刀舞曲》"><a href="#哈恰图良（Aram-Il’yich-Khachaturian）《Sabre-Dance-马刀舞曲》" class="headerlink" title="哈恰图良（Aram Il’yich Khachaturian）《Sabre Dance | 马刀舞曲》"></a>哈恰图良（Aram Il’yich Khachaturian）《Sabre Dance | 马刀舞曲》</h4><p>节奏快速，激烈热情。<br>《马刀舞曲》是一篇急就章，乐曲中的焦躁感或许就是作曲者当时的心情。《马刀舞曲》的巨大成功反而衬托得作曲者其他作品都不起眼了，哈恰图良懊恼道“若知道会让其他作品失去关注的话，我就不会写了”。</p>
<h4 id="乔治·比才（Georges-Bizet）《Carmen-卡门》"><a href="#乔治·比才（Georges-Bizet）《Carmen-卡门》" class="headerlink" title="乔治·比才（Georges Bizet）《Carmen | 卡门》"></a>乔治·比才（Georges Bizet）《Carmen | 卡门》</h4><p>歌剧中无人不知，无人不晓的存在。</p>
<h4 id="古斯塔夫·马勒（德：Gustav-Mahler）《Symphony-No-1-Titan-第一交响曲·巨人》"><a href="#古斯塔夫·马勒（德：Gustav-Mahler）《Symphony-No-1-Titan-第一交响曲·巨人》" class="headerlink" title="古斯塔夫·马勒（德：Gustav Mahler）《Symphony No.1 Titan | 第一交响曲·巨人》"></a>古斯塔夫·马勒（德：Gustav Mahler）《Symphony No.1 Titan | 第一交响曲·巨人》</h4><p>“交响曲要像世界一样，必须要能包容万象。”</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/Artistic-Classical/" target="_blank" rel="external">古典音乐低俗史</a></li>
<li><a href="https://riboseyim.github.io/2017/04/20/Artistic-The-Mad-Phoenix/" target="_blank" rel="external">舞台剧：南海十三郎</a></li>
<li><a href="https://riboseyim.github.io/2016/09/10/Lincoln/" target="_blank" rel="external">电影评论|灵魂解码《林肯》</a></li>
<li><a href="https://riboseyim.github.io/2017/05/13/Lincoln-Spielberg/" target="_blank" rel="external">电影评论|斯皮尔伯格的林肯情怀</a></li>
<li><a href="https://riboseyim.github.io/2017/10/18/Artistic-Poetry/" target="_blank" rel="external">风月集|诗三百，思无邪</a></li>
<li><a href="https://riboseyim.github.io/2017/04/13/Artistic-Les-Miserables/" target="_blank" rel="external">世纪小说《悲惨世界》</a></li>
<li><a href="https://riboseyim.github.io/2017/10/04/Redology-DunMing/" target="_blank" rel="external">红楼故事：佩刀沽酒作长歌</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/" target="_blank" rel="external">红楼故事：康熙的秘密情报系统</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/Artistic-Garden/" target="_blank" rel="external">江南园林鉴赏|南京瞻园</a></li>
<li><a href="https://riboseyim.github.io/2016/10/15/Artistic-Zhuhai-AirShow/" target="_blank" rel="external">摄影专辑|珠海航空航天展览</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/vyjD4UMGQTeBwD0EmNmb4w" target="_blank" rel="external">古典音乐欣赏从这里轻松入门 | 原创 2016-10-30 古典音乐</a></li>
<li><a href="https://mp.weixin.qq.com/s/2Ee3RR0zBsADlY0W99ryIA" target="_blank" rel="external">《 THE FENCER 》，一部真实题材的击剑作品、一部 FIE 推荐的击剑电影！</a></li>
<li><a href="https://mp.weixin.qq.com/s/sVeqSaIykxHjolQ9ZnEmlQ" target="_blank" rel="external">绝望的微笑–柴可夫斯基《悲怆》交响曲</a></li>
<li><a href="http://www.pku-hall.com/jtqk03.aspx?id=97" target="_blank" rel="external">天生的激进分子：德彪西</a></li>
<li><a href="https://mp.weixin.qq.com/s/X5LnROCCneDXpMTj45zviw" target="_blank" rel="external">【音乐研究】音乐品位折射你的思维</a></li>
<li><a href="https://site.douban.com/245962/widget/notes/190876031/note/566596043/" target="_blank" rel="external">【2016-5-23】本科论文 | 纳粹德国1937年“堕落艺术展”研究 （by 骆舒星 ）</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA4MjA2OTEyMw==&amp;mid=2650273241&amp;idx=1&amp;sn=34c74edaeef5cd60416dd65308253818&amp;scene=1&amp;srcid=0502aSqSyEI8aerb4TsZS66d#rd" target="_blank" rel="external">@古典音乐：西方音乐发展脉络全景图</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA5ODEwODAwNg==&amp;mid=207920664&amp;idx=3&amp;sn=9ee957ef699d35345abfa13ed0881412&amp;scene=1#rd" target="_blank" rel="external">@欧美内参：德国学校是怎么教音乐的？</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;古典音乐低俗史&lt;/li&gt;
&lt;li&gt;古典音乐经典名曲&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Art" scheme="http://riboseyim.github.com/tags/Art/"/>
    
  </entry>
  
  <entry>
    <title>Commander-Navy-Digital</title>
    <link href="http://riboseyim.github.com/2018/04/09/Commander-Navy-Digital/"/>
    <id>http://riboseyim.github.com/2018/04/09/Commander-Navy-Digital/</id>
    <published>2018-04-09T09:39:06.000Z</published>
    <updated>2018-04-16T10:05:38.578Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/3U7QifYIVnUPScBM78RDGQ" target="_blank" rel="external">美军核潜艇部队现状及其发展 | 2018-03-12 知远战略与防务研究所</a></li>
<li><a href="https://www.pmume.com/hjbk/nnc0w.shtml" target="_blank" rel="external">海军百科|潜艇潜望镜</a></li>
<li><a href="https://www.pmume.com/hjbk/nnoih.shtml" target="_blank" rel="external">海军百科|攻击潜望镜</a></li>
<li><a href="http://digi.tech.qq.com/a/20170921/013387.htm" target="_blank" rel="external">美国海军居然用Xbox手柄来控制潜艇潜望镜|腾讯数码2017-09-21</a></li>
<li><a href="https://www.digitaltrends.com/gaming/xbox-360-controller-us-navy-submarine-periscope/" target="_blank" rel="external">The U.S. Navy is using Xbox 360 controllers to operate submarine periscopes | 9.19.17</a></li>
<li><a href="https://www.digitaltrends.com/cool-tech/navy-xbox-controllers-attack-submarines/" target="_blank" rel="external">Newest Navy attack sub uses an Xbox controller to operate its periscope | 3.17.18</a></li>
<li><a href="https://www.digitaltrends.com/health-fitness/navy-bans-e-cigarettes/" target="_blank" rel="external">Dishonorable discharge for e-cigs — U.S. Navy bans the devices aboard vessels|4.16.17</a></li>
<li><a href="https://www.digitaltrends.com/cool-tech/littoral-combat-ships/" target="_blank" rel="external">Navy uses virtual reality to train crews for deployment on the ships of tomorrow|9.2.17</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%BC%97%E5%90%89%E5%B0%BC%E4%BA%9A%E7%BA%A7%E6%A0%B8%E6%BD%9C%E8%89%87" target="_blank" rel="external">维基百科：弗吉尼亚级攻击型核潜艇</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E7%BE%8E%E5%9C%8B%E6%B5%B7%E8%BB%8D%E6%BD%9B%E8%89%87%E7%B4%9A%E5%88%A5%E5%88%97%E8%A1%A8" target="_blank" rel="external">维基百科：美国海军潜艇级别列表</a></li>
<li><a href="http://www.hfdsb.gov.cn/News/jsjs/201801/20180124113319_28949.html" target="_blank" rel="external">宁波破获特大卷烟案，案值上亿| 加热不燃烧新型卷烟非法经营案 | 2018-1-24　来源：宁波晚报　作者：张贻富</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Machine Learning:如何选择机器学习算法？</title>
    <link href="http://riboseyim.github.com/2018/04/02/Machine-Learning-Algorithms-Sheet/"/>
    <id>http://riboseyim.github.com/2018/04/02/Machine-Learning-Algorithms-Sheet/</id>
    <published>2018-04-02T07:28:39.000Z</published>
    <updated>2018-05-07T12:58:43.077Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>识别和应用机器学习算法解决问题</li>
<li>机器学习算法备忘单</li>
<li>何时使用特定算法? 线性回归 vs 逻辑回归,Linear SVM vs kernel SVM,Trees</li>
<li>神经网络和深度学习：k-means/k-modes,GMM,Hierarchical clustering,PCA,SVD,LDA</li>
</ul>
<a id="more"></a>
<h2 id="Machine-Learning-Algorithms-Overview"><a href="#Machine-Learning-Algorithms-Overview" class="headerlink" title="Machine Learning Algorithms Overview"></a>Machine Learning Algorithms Overview</h2><p>关于目前最流行的一些机器学习算法，建议阅读：</p>
<ul>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/" target="_blank" rel="external">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/" target="_blank" rel="external">Machine Learning:机器学习书单</a></li>
</ul>
<p>如果您已经非常熟悉这些算法，可以跳过本节。</p>
<h2 id="Which-machine-learning-algorithm-should-I-use"><a href="#Which-machine-learning-algorithm-should-I-use" class="headerlink" title="Which machine learning algorithm should I use?"></a>Which machine learning algorithm should I use?</h2><ul>
<li><a href="https://blogs.sas.com/content/subconsciousmusings/2017/04/12/machine-learning-algorithm-use/?utm_source=twitter&amp;utm_medium=cpc&amp;utm_campaign=analytics-global&amp;utm_content=US_tap" target="_blank" rel="external">Which machine learning algorithm should I use? | Hui Li | Principal Staff Scientist, Data Science</a></li>
</ul>
<p>面对各种机器学习算法时，经常遇到的一个典型问题是“我应该使用哪种算法？” 问题的答案取决于许多因素，其中包括：</p>
<ul>
<li>数据的大小，质量和性质</li>
<li>可用的计算时间</li>
<li>任务的紧迫性</li>
<li>你想对数据做什么</li>
</ul>
<p>即使是一位经验丰富的数据科学家，也无法在尝试不同的算法之前知道哪种算法会表现最好。我们并不主张这是唯一的、完美的方案，而是希望能够根据一些明确的因素提供指导——首先应该尝试哪些算法。</p>
<h3 id="机器学习算法备忘单"><a href="#机器学习算法备忘单" class="headerlink" title="机器学习算法备忘单"></a>机器学习算法备忘单</h3><p>机器学习算法备忘单（The machine learning algorithm cheat sheet）可以帮助您从各种机器学习算法中进行选择，以找到适合您的特定问题的适当算法。本文将说明使用备忘单的过程。</p>
<p>由于备忘单是为初学者数据科学家和分析师设计的，因此在讨论算法时会做一些简化假设。这里推荐的算法来自几位数据科学家和机器学习专家和开发人员的反馈和提示。有几个问题我们的看法并不一致，对于这些问题，我们试图强调通用性、尽量调和差异。随着我们的知识库发展，将包含一套更完整的方法，其他算法将在稍后添加。</p>
<p><img src="http://omb2onfvy.bkt.clouddn.com/machine-learning-cheet-sheet.png" alt="The machine learning algorithm cheat sheet"></p>
<h4 id="如何使用备忘单"><a href="#如何使用备忘单" class="headerlink" title="如何使用备忘单"></a>如何使用备忘单</h4><p>备忘单使用方法，依次阅读的路径和算法标签，例如：</p>
<ul>
<li>如果要执行降维（dimension reduction），则使用主成分分析（principal component analysis）</li>
<li>如果您需要快速进行数值预测（numeric prediction），请使用决策树（decision tree）或逻辑回归（ logistic regression）</li>
<li>如果您需要分层结果，则使用分层聚类（hierarchical clustering）</li>
</ul>
<p>有些场景可能会适用不止一个分支，也有些场景不能完美匹配上，重要的是要记住，这些路径只是基于经验的方法，因此一些建议并不完全准确。许多数据科学家的关电视，找到最好算法的唯一方法就是尝试所有算法（the only sure way to find the very best algorithm is to try all of them）。</p>
<h2 id="何时使用特定算法"><a href="#何时使用特定算法" class="headerlink" title="何时使用特定算法?"></a>何时使用特定算法?</h2><h4 id="线性回归-vs-逻辑回归"><a href="#线性回归-vs-逻辑回归" class="headerlink" title="线性回归 vs 逻辑回归"></a>线性回归 vs 逻辑回归</h4><p>线性回归是一种讨论连续因变量之间关系的建模方法。如果因变量不是连续的而是分类的，则可以使用 logit link function 将线性回归转化为逻辑回归。逻辑回归是一种简单，快速而强大的分类算法。这里我们讨论二进制情况下的因变量</p>
<p>在逻辑回归中，我们使用不同的假设类来尝试预测给定示例属于“1”类的概率与其属于“-1”类的概率。</p>
<table>
<thead>
<tr>
<th>线性回归</th>
<th>逻辑回归</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="http://omb2onfvy.bkt.clouddn.com/machine-learning-linear-regression.png" alt="Linear regression"></td>
<td><img src="http://omb2onfvy.bkt.clouddn.com/machine-learning-logistic-regresion.png" alt="Logistic regression"></td>
</tr>
</tbody>
</table>
<h4 id="Linear-SVM-vs-kernel-SVM"><a href="#Linear-SVM-vs-kernel-SVM" class="headerlink" title="Linear SVM vs kernel SVM"></a>Linear SVM vs kernel SVM</h4><p>当数据的各种类型不是线性可分的时候，核方法（Kernel method 或 Kernel tricks）可以用来将非线性可分的空间映射到更高维的线性可分的空间。</p>
<p>支持向量机（SVM）算法相当于通过法线（Normal vector）和超平面偏差（bias  of the hyperplane）获得分类器。这个超平面（边界）尽可能宽地分隔不同的类，该问题可以转化为约束优化问题。</p>
<p>当大多数因变量是数字时，逻辑回归和 SVM 是首先应该尝试的分类方法。这些模型易于实现，参数易调整，性能也相当不错。非常适合初学者。</p>
<p><img src="http://omb2onfvy.bkt.clouddn.com/machine-learning-kernal-SVM.png" alt="Kernel tricks are used to map a non-linearly separable functions into a higher dimension linearly separable function."></p>
<table>
<thead>
<tr>
<th>线性回归</th>
<th>逻辑回归</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="http://omb2onfvy.bkt.clouddn.com/machine-learning-Group-By-Linear-Regression.jpg" alt="Group By Linear Regression"></td>
<td><img src="http://omb2onfvy.bkt.clouddn.com/machine-learning-Logistic-Regression-SAS.jpg" alt="machine-learning-Logistic-Regression-SAS"></td>
</tr>
</tbody>
</table>
<h4 id="树-Tree"><a href="#树-Tree" class="headerlink" title="树 | Tree"></a>树 | Tree</h4><ul>
<li>预测模型中的决策树</li>
</ul>
<p>决策树（Decision Tree），随机森林（Random Forest）和梯度提升（Gradient Boosting ）都是基于决策树的算法。决策树有许多变体，但它们都做同样的事情 - 将特征空间细分成大多数标签相同的区域。决策树很容易理解和实施。但是，当我们耗尽树枝（branch）并且深入时，它们倾向于过度拟合数据。随机森林和梯度提升是两种使用树算法的实现，具有良好的精确度，是克服过拟合问题（over-fitting problem）的流行方法。</p>
<p><img src="http://omb2onfvy.bkt.clouddn.com/machine-learning-decision-tree.png" alt="A decision tree for prediction model"></p>
<p>注：在统计学中，过拟合（overfitting，或称过度拟合）现象是指在拟合一个统计模型时，使用过多参数。对比于可获取的数据总量来说，一个荒谬的模型只要足够复杂，是可以完美地适应数据。过拟合一般可以视为违反奥卡姆剃刀原则。当可选择的参数的自由度超过数据所包含信息内容时，这会导致最后（拟合后）模型使用任意的参数，这会减少或破坏模型一般化的能力（目标效果应适用于一般化的情况而非只是训练时所使用的现有数据（根据它的归纳偏向））。另一种常见的现象是使用太少参数，以致于不适应数据，这则称为乏适（underfitting，或称：拟合不足）现象。</p>
<h3 id="神经网络和深度学习"><a href="#神经网络和深度学习" class="headerlink" title="神经网络和深度学习"></a>神经网络和深度学习</h3><p><img src="http://omb2onfvy.bkt.clouddn.com/machine-learning-cnn-architecture.jpg" alt="A convolution neural network architecture"></p>
<p>神经网络在 20 世纪 80 年代中期由于其并行和分布式处理能力而兴旺发达。但是在这个领域的研究受反向传播算法无效性的阻碍，它广泛用于优化神经网络参数。支持向量机（SVM）和其他更简单的模型，可以通过求解凸优化问题来轻松训练，逐渐取代机器学习中的神经网络。</p>
<p>近年来，诸如无监督预训练（ unsupervised pre-training）和分层贪婪训练（layer-wise greedy training）等新的和改进的训练技术促进了神经网络的复兴。日益强大的计算能力，例如图形处理单元（GPU）和大规模并行处理（MPP），也刺激了神经网络的发展，已经发明出具有数千层的神经网络模型。</p>
<p>注：反向传播（Backpropagation，缩写 BP）是“误差反向传播”的简称，一种与最优化方法（如梯度下降法）结合使用的，用来训练人工神经网络的常见方法。该方法对网络中所有权重计算损失函数的梯度。这个梯度会反馈给最优化方法，用来更新权值以最小化损失函数。</p>
<h3 id="SAS-Visual-Analytics-中的神经网络"><a href="#SAS-Visual-Analytics-中的神经网络" class="headerlink" title="SAS Visual Analytics 中的神经网络"></a>SAS Visual Analytics 中的神经网络</h3><p>换句话说，浅层神经网络已演变成深度学习神经网络。深度神经网络对于监督学习非常成功。当用于语音和图像识别时，深度学习的表现与人类一样好，甚至更好。应用于无监督学习任务（如特征提取），深度学习还可从原始图像或语音中提取特征，而人工干预则更少。</p>
<p>神经网络由三部分组成：输入层（input layer），隐藏层（hidden layers）和输出层（output layer）。训练样本定义了输入层和输出层。当输出层是一个分类变量时，神经网络就是解决分类问题的一种方法。当输出层是连续变量时，网络可以用来做回归。当输出层与输入层相同时，网络可用于提取内在特征。隐藏层的数量决定了模型的复杂性和建模容量。</p>
<p><img src="http://omb2onfvy.bkt.clouddn.com/machine-learning-vdmml_neural.png" alt="A neural network in SAS Visual Analytics"></p>
<h4 id="k-means-k-modes，GMM（高斯混合模型）聚类"><a href="#k-means-k-modes，GMM（高斯混合模型）聚类" class="headerlink" title="k-means / k-modes，GMM（高斯混合模型）聚类"></a>k-means / k-modes，GMM（高斯混合模型）聚类</h4><p>k-means / k-modes，GMM 聚类旨在将 n 个观测分为 k 个聚类。 简单地说，k-means 的结果是每个数据点被 assign 到其中某一个 cluster 了，即 hard  assignment，而 GMM 则给出这些数据点被 assign 到每个cluster 的概率，又称作 soft assignment 。每个样本都有与每个群集关联的概率。当给定聚类数 k 时，两种算法都足够简单快速地进行聚类。</p>
<table>
<thead>
<tr>
<th>k-means</th>
<th>GMM</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="http://omb2onfvy.bkt.clouddn.com/machine-learning-kmeans-clustering-1.png" alt="K Means Clustering"></td>
<td><img src="http://omb2onfvy.bkt.clouddn.com/machine-learning-gaussianmixturemodel-1.png" alt="Gaussian Mixture Model"></td>
</tr>
</tbody>
</table>
<h4 id="DBSCAN-基于密度的空间聚类"><a href="#DBSCAN-基于密度的空间聚类" class="headerlink" title="DBSCAN | 基于密度的空间聚类"></a>DBSCAN | 基于密度的空间聚类</h4><p>DBSCAN ，Density-based spatial clustering of applications with noise ，是在 1996 年由 Martin Ester 等提出的聚类分析算法， 这个算法是以密度为本的：给定某空间里的一个点集合，该算法能把附近的点分成一组（有很多相邻点的点），并标记出位于低密度区域的局外点（最接近它的点也十分远），DBSCAN 是一个最常用的聚类分析算法。</p>
<p><img src="http://omb2onfvy.bkt.clouddn.com/machine-learning-dbscan.jpg" alt="A DBSCAN illustration"></p>
<h4 id="Hierarchical-clustering-分层聚类"><a href="#Hierarchical-clustering-分层聚类" class="headerlink" title="Hierarchical clustering | 分层聚类"></a>Hierarchical clustering | 分层聚类</h4><p>分层分区可以使用树结构（树状图）可视化。它不需要集群的数量作为输入，并且可以使用不同的 K 来在不同粒度级别处查看分区（即精炼/粗化集群  refine/coarsen clusters）。</p>
<p><img src="http://omb2onfvy.bkt.clouddn.com/machine-learning-Hierarchical_clustering.png" alt="Hierarchical clustering"></p>
<h4 id="PCA，SVD和LDA"><a href="#PCA，SVD和LDA" class="headerlink" title="PCA，SVD和LDA"></a>PCA，SVD和LDA</h4><p>我们通常不希望直接将大量特征提供给机器学习算法，因为某些特征可能无关紧要，或者“内在”维度可能小于特征的数量。主成分分析（PCA，Principal components analysis），奇异值分解（SVD，Singular value decomposition）和隐含狄利克雷分布（LDA，latent Dirichlet allocation）均可用于降维。</p>
<p>PCA 是一种无监督聚类方法，它将原始数据空间映射到较低维空间，同时保留尽可能多的信息。 PCA 基本上找到最能保留数据方差的子空间，子空间由数据协方差矩阵的主要特征向量定义。</p>
<p>SVD 和 PCA 有一定联系——中心数据矩阵的 SVD（特征 vs. 样本）能提供定义由 PCA 所找到的同样子空间的主左奇异向量（dominant left singular vectors）。然而，SVD 是一种更通用的技术，因为它也可以做 PCA 不能做的事情。例如，用户与电影矩阵的 SVD 能够提取可以在推荐系统中使用的用户资料和电影资料。另外，在自然语言处理（NLP）中，SVD 还被广泛用作主题建模工具，称为潜在语义分析（ latent semantic analysis ）。</p>
<p>NLP 中的相关技术是隐含狄利克雷分布（ LDA ）。 LDA 是概率性主题模型，它以与高斯混合模型（GMM）相似的方式，即将连续数据按照高斯密度分解——将文档分解为主题。与 GMM 不同的是，LDA 对离散数据（文档中的词）进行建模，并且它约束了主题需是根据狄利克雷分布的先验分布。</p>
<h2 id="总结：选择算法时的注意事项"><a href="#总结：选择算法时的注意事项" class="headerlink" title="总结：选择算法时的注意事项"></a>总结：选择算法时的注意事项</h2><p>选择算法时请始终考虑以下方面：准确性（accuracy），训练时间（training time）和易用性（ease of use）。许多用户将准确性放在首位，而 <strong>初学者倾向于关注他们最熟悉的算法（Beginners tend to focus on algorithms they know best）</strong>。</p>
<p>首先要考虑的是如何获得结果，无论结果如何。<strong>初学者倾向于选择易于实现并能够快速获得结果的算法（Beginners tend to choose algorithms that are easy to implement and can obtain results quickly）</strong>。这个工作无可厚非，只需确保它只是整个过程的第一步。一旦您获得了一些结果并熟悉数据，您可能需要花更多时间、使用更复杂的算法来加强对数据的理解，从而进一步改进结果。</p>
<p>最好的算法也许不是那些已经获得最高准确率的方法，因为算法通常需要仔细调整、广泛训练才可以实现可用性方面的最佳性能。</p>
<h2 id="扩展阅读-《The-Machine-Learning-Master》"><a href="#扩展阅读-《The-Machine-Learning-Master》" class="headerlink" title="扩展阅读:《The Machine Learning Master》"></a>扩展阅读:<a href="https://www.gitbook.com/book/riboseyim/machine-learning" target="_blank" rel="external">《The Machine Learning Master》</a></h2><p><img src="http://p11slcnom.bkt.clouddn.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/" target="_blank" rel="external">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/" target="_blank" rel="external">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/" target="_blank" rel="external">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/" target="_blank" rel="external">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/" target="_blank" rel="external">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network" target="_blank" rel="external">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/" target="_blank" rel="external">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News" target="_blank" rel="external">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/" target="_blank" rel="external">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/" target="_blank" rel="external">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/" target="_blank" rel="external">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://blogs.sas.com/content/subconsciousmusings/2017/04/12/machine-learning-algorithm-use/?utm_source=twitter&amp;utm_medium=cpc&amp;utm_campaign=analytics-global&amp;utm_content=US_tap" target="_blank" rel="external">Which machine learning algorithm should I use? | Hui Li | Principal Staff Scientist, Data Science</a></li>
<li><a href="https://arxiv.org/pdf/1302.1552.pdf" target="_blank" rel="external">An Information-Theoretic Analysis of Hard and Soft Assignment Methods for Clustering </a></li>
<li><a href="http://www.iro.umontreal.ca/~lisa/pointeurs/BengioNips2006All.pdf" target="_blank" rel="external">Greedy Layer-Wise Training of Deep Networks</a></li>
<li><a href="https://blogs.sas.com/content/subconsciousmusings/2018/03/09/understanding-interpreting-data-set/" target="_blank" rel="external">Understanding and interpreting your data set  1</a></li>
<li><a href="http://www.kernel-machines.org/publications/pdfs/0701907.pdf" target="_blank" rel="external">KERNEL METHODS IN MACHINE LEARNING1 |By Thomas Hofmann, Bernhard Scholkopf and Alexander J. Smola</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;识别和应用机器学习算法解决问题&lt;/li&gt;
&lt;li&gt;机器学习算法备忘单&lt;/li&gt;
&lt;li&gt;何时使用特定算法? 线性回归 vs 逻辑回归,Linear SVM vs kernel SVM,Trees&lt;/li&gt;
&lt;li&gt;神经网络和深度学习：k-means/k-modes,GMM,Hierarchical clustering,PCA,SVD,LDA&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="架构师" scheme="http://riboseyim.github.com/tags/%E6%9E%B6%E6%9E%84%E5%B8%88/"/>
    
      <category term="数学与算法" scheme="http://riboseyim.github.com/tags/%E6%95%B0%E5%AD%A6%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
      <category term="Machine-Learning" scheme="http://riboseyim.github.com/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>Lincoln-Chicago-Orchestra</title>
    <link href="http://riboseyim.github.com/2018/03/30/Lincoln-Chicago-Orchestra/"/>
    <id>http://riboseyim.github.com/2018/03/30/Lincoln-Chicago-Orchestra/</id>
    <published>2018-03-30T08:17:42.000Z</published>
    <updated>2018-03-30T08:18:47.271Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://zh.wikipedia.org/wiki/%E7%AE%A1%E5%BC%A6%E4%B9%90%E5%9B%A2%E5%88%97%E8%A1%A8" target="_blank" rel="external">维基百科：芝加哥交响乐团</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E7%AE%A1%E5%BC%A6%E4%B9%90%E5%9B%A2%E5%88%97%E8%A1%A8" target="_blank" rel="external">维基百科：管弦乐团列表</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;h2 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;参考文献&lt;/h
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>DevOps 漫谈:DevOps实践的本质是文化</title>
    <link href="http://riboseyim.github.com/2018/03/29/DevOps-Culture/"/>
    <id>http://riboseyim.github.com/2018/03/29/DevOps-Culture/</id>
    <published>2018-03-29T01:21:17.000Z</published>
    <updated>2018-04-26T02:11:18.984Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>DevOps实践的本质是文化</li>
</ul>
<a id="more"></a>
<h2 id="DevOps实践的本质是文化"><a href="#DevOps实践的本质是文化" class="headerlink" title="DevOps实践的本质是文化"></a>DevOps实践的本质是文化</h2><p>2016-07-24 运维日 广州活动纪要<br>地点：羊城晚报 同创汇</p>
<h4 id="刘宇"><a href="#刘宇" class="headerlink" title="刘宇"></a>刘宇</h4><p>职业路径：新浪－&gt;Puppet实践－&gt;Puppet系列文集－&gt;InfoQ编辑－&gt;西山居<br>社区：LinuxTone.org、InfoQ</p>
<ul>
<li>Automation：工具化</li>
<li>Lean 精益：</li>
<li>Measurement：度量一切</li>
<li><p>Sharing：不管是否成功</p>
</li>
<li><p>人物：Patrick Debois：比利时，独立顾问，DevOps领袖（2008年）</p>
</li>
</ul>
<p><strong>推荐书单</strong></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/" target="_blank" rel="external">《The Phoenix Project》</a></li>
<li><p>《The DevOps Cookbook》</p>
</li>
<li><p>企业：Facebook</p>
<blockquote>
<p>Don’t make me think</p>
</blockquote>
</li>
</ul>
<p><strong>凡是被很多人不断重复的好习惯，要将其自动化整合到工具</strong></p>
<ul>
<li>实践经验<br>1.站立会<br>2.<a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/" target="_blank" rel="external">Kanban|看板</a><br>3.复盘：总结－发现问题－改进<br>4.<a href="https://riboseyim.github.io/2017/06/27/Technology-English/" target="_blank" rel="external">带领团队翻译书籍 （这事听着都打鸡血)</a></li>
</ul>
<blockquote>
<p>学习力－团队生命之根</p>
</blockquote>
<h4 id="魅族云"><a href="#魅族云" class="headerlink" title="魅族云"></a>魅族云</h4><p>1.异地多活：专线打通多个IDC机房<br>2.KVM<br>3.网络：OpenStack 实现控制器、GSLB 全局负载均衡，智能路由</p>
<h4 id="微信：自动压力测试实践"><a href="#微信：自动压力测试实践" class="headerlink" title="微信：自动压力测试实践"></a>微信：自动压力测试实践</h4><p>张兴：8年＋</p>
<p>1.生产环境运行压力测试<br>2.接入Proxy层，调整请求分配权重<br>3.压测管控</p>
<p>失败监控（系统、逻辑）<br>耗时监控（SUR client）<br>快速拒绝（如何判断是否可以丢弃？）<br>硬件限制（CPU，内存，网卡）</p>
<p>数据：<br>15s监控数据入库画图，<br>1min回退配置（1w台服务器），<br>降低放量速率</p>
<h4 id="YY安全"><a href="#YY安全" class="headerlink" title="YY安全"></a>YY安全</h4><ul>
<li>案例一：海量小包攻击性防御<br>1.20140828  脉冲DDoS攻击<br>40小时，40人团队，监控不足<br>5秒钟一次，发送小包</li>
</ul>
<p>黑产报价：150元可购买 15G流量，700W pps，攻击成本低</p>
<ul>
<li>案例二：合作方服务器被入侵概率高（木马）</li>
</ul>
<p>ps/netstat污染处理：内核态，查看System.Call  (可以挖掘写一篇)</p>
<ul>
<li><p>案例三：主播IP泄漏<br>业务逻辑bug，异常抛出IP</p>
</li>
<li><p>案例四<br>确定当前主要矛盾：投诉盗号、盗刷？服务器入侵？DDoS ?<br>利用现有资源（自有编制、第三方合作），最大投入产出比</p>
</li>
<li><p>决策变量<br>技术预研、业务规模、发展阶段、主要矛盾（切入点）</p>
</li>
</ul>
<h2 id="扩展阅读：DevOps-漫谈系列"><a href="#扩展阅读：DevOps-漫谈系列" class="headerlink" title="扩展阅读：DevOps 漫谈系列"></a>扩展阅读：<a href="https://riboseyim.github.io/2016/07/28/DevOps/" target="_blank" rel="external">DevOps 漫谈系列</a></h2><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/" target="_blank" rel="external">《凤凰项目》：从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/" target="_blank" rel="external">Kanban 看板管理实践</a></li>
<li><a href="https://riboseyim.github.io/2018/03/26/DevOps-Deployment/" target="_blank" rel="external">DevOps 漫谈：基础设施部署和配置管理</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/" target="_blank" rel="external">Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/" target="_blank" rel="external">工程师的自我修养：全英文技术学习实践</a></li>
</ul>
<h4 id="DevOps-实践的本质是文化"><a href="#DevOps-实践的本质是文化" class="headerlink" title="DevOps 实践的本质是文化"></a><a href="https://riboseyim.github.io/2018/03/29/DevOps-Culture/" target="_blank" rel="external">DevOps 实践的本质是文化</a></h4><ul>
<li>学习力－团队生命之根</li>
<li>带领团队翻译书籍</li>
<li>Don’t make me think</li>
<li>凡是被很多人不断重复的好习惯，要将其自动化整合到工具</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA4Nzg5Nzc5OA==&amp;mid=400138875&amp;idx=1&amp;sn=01b4ea2978370d215442e4a22d7d2a7f&amp;scene=1&amp;srcid=1028tfQzmCsfXfTybP9dWEAy#rd" target="_blank" rel="external">中小企业监控体系构建实战</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzAwMDU1MTE1OQ==&amp;mid=2653548227&amp;idx=1&amp;sn=3deb458aa18fa878dc9eaf89aaa78303&amp;chksm=813a7f5bb64df64d7037213ef34b3ff6c09375593ec82919b214829b825e82565b6058366ef1&amp;mpshare=1&amp;scene=1&amp;srcid=01190z58NNndr7YlKBPp5Jz6#rd" target="_blank" rel="external">LinkedIn:如何利用大数据算法定位网站性能瓶颈(BOSS)</a></li>
<li><a href="http://jaseywang.me/2017/02/08/%e6%a0%91%e8%8e%93%e6%b4%beraspberrypi%e3%80%81saltstack-%e5%9c%a8%e7%ba%bf%e4%b8%8b%e8%87%aa%e5%8a%a9%e6%9c%ba%e8%bf%90%e7%bb%b4%e4%b8%8a%e7%9a%84%e5%ba%94%e7%94%a8/" target="_blank" rel="external">树莓派(raspberrypi)、saltstack 在线下自助机运维上的应用 | Jasey Wang</a></li>
<li><a href="http://abruzzi.github.com/2016/05/design-for-failure/" target="_blank" rel="external">邱俊涛：为故障和失败做设计</a></li>
<li><a href="http://coolshell.cn/articles/17737.html" target="_blank" rel="external">酷壳：AWS 的 S3 故障回顾和思考</a></li>
<li><a href="http://coolshell.cn/articles/17680.html" target="_blank" rel="external">酷壳：从GITLAB误删除数据库想到的</a></li>
<li><a href="http://coolshell.cn/articles/17446.html" target="_blank" rel="external">酷壳：这多年来我一直在钻研的技术</a></li>
<li><a href="http://www.infoq.com/cn/presentations/chatops-at-github" target="_blank" rel="external">GitHub运维机器人</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=206585329&amp;idx=1&amp;sn=b3cdb637dfff9b4378ec703c9b27a331&amp;scene=1%23rd" target="_blank" rel="external">运维的本质：可视化 |2015-05-14 王津银 InfoQ</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;DevOps实践的本质是文化&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="最佳工程实践" scheme="http://riboseyim.github.com/tags/%E6%9C%80%E4%BD%B3%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
      <category term="架构师" scheme="http://riboseyim.github.com/tags/%E6%9E%B6%E6%9E%84%E5%B8%88/"/>
    
      <category term="DevOps" scheme="http://riboseyim.github.com/tags/DevOps/"/>
    
  </entry>
  
  <entry>
    <title>DevOps 漫谈：基础设施部署和配置管理</title>
    <link href="http://riboseyim.github.com/2018/03/26/DevOps-Deployment/"/>
    <id>http://riboseyim.github.com/2018/03/26/DevOps-Deployment/</id>
    <published>2018-03-26T10:01:39.000Z</published>
    <updated>2018-05-02T03:14:45.860Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Ansible vs. Chef vs. Fabric vs. Puppet vs. SaltStack</li>
</ul>
<a id="more"></a>
<p><img src="http://og2061b3n.bkt.clouddn.com/Deploying-Management-Tools.png" alt=""></p>
<p>在生产环境中工作，常常意味着连续部署和遍布全球的基础设施。如果您的基础架构是分散式和基于云的，同时您需要在大量服务器上频繁部署大量类似的服务，如果此时有一种方法可以自动配置和维护以上所有内容将是您的一大福音。</p>
<p>部署管理工具（Deployment management tools）和配置管理工具(configuration management tools)是为此目的而设计的。它们使您能够使用“食谱”（recipes），“剧本” (playbooks)，模板(templates)或任何术语来简化整个环境中的自动化和编排，以提供标准、一致的部署。</p>
<p>在选择工具时请记住几点注意事项。首先是了解工具的模型。有些工具采用主控模式（master-client model），它有一个集中控制点（master）与分布式部署的服务器进行通信，其他部分则可以在更本地的层面上运行。另一个考虑因素是你的环境构成。有些工具是采用不同的语言编写的，对于特定的操作系统或设置可能会有所不同。确保您选择的工具与您的环境完美配合，充分利用团队的特定技能可以为您节省很多麻烦。</p>
<h4 id="1-Ansible"><a href="#1-Ansible" class="headerlink" title="1. Ansible"></a>1. Ansible</h4><p><img src="http://og2061b3n.bkt.clouddn.com/Ansible-Logo.jpg" alt=""><br>￼Ansible是一种开源工具，用于以可重复的方式将应用程序部署到远程节点和配置服务器。它为您提供了基于推送模型（push model ）推送多层应用程序和应用程序组件的通用框架，您也可以根据需要将其设置为 master-client 模式。 Ansible 建立在可用于各种系统上部署应用程序的剧本(playbook)。</p>
<p><strong>何时使用它</strong> ：对您来说最重要的是快速，轻松地启动和运行，并且您不想在远程节点或受管服务器上安装代理（Agent）。如果您的需求重点更多地放在系统管理员身上，专注于精简和快速，请考虑 Ansible 。</p>
<p>价格：免费的开源版本，Ansible Tower 的付费套餐每年 5000 美元（最多可容纳100个节点）。</p>
<p><strong>赞成的理由：</strong></p>
<ul>
<li>基于 SSH , 不需要在远程节点安装任何代理</li>
<li>学习曲线平缓、使用 YAML</li>
<li>Playbook 结构简单，结构清晰</li>
<li>具有变量注册功能，可以使前一个任务作为后一个任务的变量</li>
<li>代码库精简</li>
</ul>
<p><strong>反对的理由：</strong></p>
<ul>
<li>相较其他编程语言的工具功能有限。</li>
<li>通过 DSL 实现其逻辑，这意味着需要经常查看文档直到您学会为止</li>
<li>即使是最基本功能也需要变量注册，这可能使简单任务变得复杂</li>
<li>内省（Introspection）很差。例如很难在剧本中看到变量的值</li>
<li>输入，输出和配置文件格式之间缺乏一致性</li>
<li>性能存在一定瓶颈</li>
</ul>
<p><img src="http://og2061b3n.bkt.clouddn.com/Ansible-Tower-Dashboard.png" alt=""></p>
<h4 id="2-Chef"><a href="#2-Chef" class="headerlink" title="2. Chef"></a>2. Chef</h4><p><img src="http://og2061b3n.bkt.clouddn.com/Chef-Logo.jpg" alt=""><br>￼Chef 是一个配置管理开源工具，用户群专注面向开发者。Chef 作为 master-client  模式运行，需要一个单独的工作站来控制 master 。Chef 基于 Ruby 开发，纯 Ruby 可以支持大多数元素。Chef 的设计是透明的，并遵循给定的指示，这意味着你必须确保你的指示是清楚的。</p>
<p>何时使用它：在考虑 Chef 之前，需要确保你熟悉 Git ，因为它需要配置 Git ，你必须编写 Ruby 代码。Chef 适合以开发为中心（development-focused ）的团队和环境。对于寻求更成熟异构环境解决方案的企业来说，这是一件好事。</p>
<p>价格：提供免费的开源版本，标准版和高级版计划以每年节点为单位定价。 Chef Automate 的价格为每个节点 137 美元，或者采用 Hosted Chef 每个节点每年节省72 美元。</p>
<p><strong>赞成的理由：</strong></p>
<ul>
<li>丰富的模块和配置配方(recipes)</li>
<li>代码驱动的方法为您提供更多的配置控制和灵活性</li>
<li>以 Git 为中心赋予 Chef 强大的版本控制功能</li>
<li>‘Knife’工具（使用 SSH 从工作站部署代理）减轻了安装负担</li>
</ul>
<p><strong>反对的理由：</strong></p>
<ul>
<li>如果您还不熟悉 Ruby 和面向过程编程，学习曲线会非常陡峭</li>
<li>这不是一个简单的工具，可能需要维护大量的代码库和复杂的环境</li>
<li>不支持推送功能</li>
</ul>
<p><img src="http://og2061b3n.bkt.clouddn.com/Chef-Compliance-Node.png" alt=""></p>
<h4 id="3-Fabric"><a href="#3-Fabric" class="headerlink" title="3. Fabric"></a>3. Fabric</h4><p><img src="http://og2061b3n.bkt.clouddn.com/Fabric-Logo.jpg" alt=""><br>Fabric 是一个基于 Python 的应用程序部署工具。Fabric 的主要用途是在多个远程系统上运行任务，但它也可以通过插件的方式进行扩展，以提供更高级的功能。 Fabric 将配置您的操作系统，进行操作系统/服务器管理，自动化部署您的应用。<br>￼<br>何时使用它：如果您刚刚开始进入部署自动化领域，Fabric 是一个良好的开端。如果您的环境至少包含一点 Python，它都会有所帮助。</p>
<p>价格：免费</p>
<p><strong>赞成的理由：</strong></p>
<ul>
<li>擅长部署以任何语言编写的应用程序。它不依赖于系统架构，而是依赖于操作系统和软件包管理器</li>
<li>相比其他工具更简单，更易于部署</li>
<li>与 SSH 进行了广泛的整合，以实现基于脚本的流水线</li>
</ul>
<p><strong>反对的理由：</strong></p>
<ul>
<li>Fabric 是单点设置（通常是运行部署的机器）</li>
<li>使用 PUSH 模型，因此不如其他工具那样适合流水线部署模型</li>
<li>虽然它是用于在大多数语言中部署应用程序的绝佳工具，但它确实需要运行Python，所以您的环境中必须至少有一个适用于 Fabric 的 Python 环境</li>
</ul>
<p><img src="http://og2061b3n.bkt.clouddn.com/Fabric-Dashboard-1024x823.png" alt=""></p>
<h4 id="4-Puppet"><a href="#4-Puppet" class="headerlink" title="4. Puppet"></a>4. Puppet</h4><p><img src="http://og2061b3n.bkt.clouddn.com/Puppet-Logo.png" alt=""><br>￼Puppet 长期依赖是全面配置管理领域的标准工具之一。Puppet 是一个开源工具，但是考虑到它已经存在了多长时间，它已经在一些最大和最苛刻的环境中进行了部署和验证。 Puppet 基于 Ruby 开发，但使用更接近 JSON 的领域专用语言（Domain Specific Language，DSL）。Puppet 采用master-client 模式运行，并采用模型驱动(model-driven)的方法。 Puppet 将工作设计为一系列依赖关系列表，根据您的设置，这可以使事情变得更容易或更容易混淆。</p>
<p><strong>何时使用它：</strong> 如果稳定性和成熟度对您来说是最关键的因素，Puppet 是一个不错的选择。对于具有异构环境的大型企业和涉及多种技能范围的 DevOps 团队而言而言，这是一件好事。</p>
<p>价格：Puppet 分为免费的开源版本和付费的企业版本，商业版每年每个节点 120 美元（提供批量折扣）。</p>
<p><strong>赞成的理由：</strong></p>
<ul>
<li>通过 Puppet Labs 建立了完善的支持社区</li>
<li>具有最成熟的接口，几乎可以在所有操作系统上运行</li>
<li>安装和初始设置简单</li>
<li>最完整的 Web UI</li>
<li>强大的报表功能</li>
</ul>
<p><strong>反对的理由：</strong></p>
<ul>
<li>对于更高级的任务，您需要使用基于 Ruby 的 CLI（这意味着您必须了解Ruby）</li>
<li>纯 Ruby 版本的支持正在缩减（而不是那些使用 Puppet 定制 DSL 的版本）</li>
<li>Puppet 代码库可能会变得庞大，新人需要更多的帮助</li>
<li>与代码驱动方法相比，模型驱动方法意味着用户的控制更少</li>
</ul>
<p><img src="http://og2061b3n.bkt.clouddn.com/Puppet-Dashboard.png" alt=""></p>
<h4 id="5-Saltstack"><a href="#5-Saltstack" class="headerlink" title="5. Saltstack"></a>5. Saltstack</h4><p><img src="http://og2061b3n.bkt.clouddn.com/SaltStack-Logo.jpg" alt=""></p>
<p>￼SaltStack（或 Salt）是一种基于 CLI 的工具，可以将其设置为 master-client 模型或非集中模型。 Salt 基于Python 开发，提供了 PUSH 和 SSH 两种方法与客户端通讯。 Salt 允许对客户端和配置模板进行分组，以简化对环境的控制。<br><strong>何时使用它：</strong> 如果可扩展性和弹性是一个大问题，则 Salt 是一个不错的选择。对系统管理员来说，Salt 提供的可用性非常重要。</p>
<p>价格：提供免费的开源版本，以及基于年度/节点订阅的 SaltStack Enterprise 版本。具体的价格没有在他们的网站上列出，据说每个节点每年的起步价为 150 美元。</p>
<p><strong>赞成的理由：</strong></p>
<ul>
<li>一旦你渡过了入门阶段，就可以简单地组织和使用</li>
<li>DSL 功能丰富，不需要逻辑和状态</li>
<li>输入，输出和配置非常一致，全部所有 YAML （一个可读性高，用来表达数据序列的格式）</li>
<li>内省(Introspection)非常好。很容易看到 Salt 内部发生了什么</li>
<li>强大的社区</li>
<li>很高的可扩展性和灵活性</li>
</ul>
<p><strong>反对的理由：</strong></p>
<ul>
<li>对于新用户来说，非常难以配置，学习曲线陡峭</li>
<li>在入门级别而言，文档很难理解</li>
<li>Web UI  比同领域的其他工具更新、更轻量</li>
<li>对非 Linux 操作系统没有很好的支持</li>
</ul>
<p><img src="https://docs.saltstack.com/en/getstarted/images/salt-subsystems.png" alt="Salt Subsystems"></p>
<p><img src="http://og2061b3n.bkt.clouddn.com/SlatStack-Subsystem-Job.png" alt=""></p>
<h4 id="Ansible-vs-Chef-vs-Fabric-vs-Puppet-vs-SaltStack"><a href="#Ansible-vs-Chef-vs-Fabric-vs-Puppet-vs-SaltStack" class="headerlink" title="Ansible vs. Chef vs. Fabric vs. Puppet vs. SaltStack"></a>Ansible vs. Chef vs. Fabric vs. Puppet vs. SaltStack</h4><p>您使用的配置管理或部署自动化工具取决于您的环境需求和偏好。 Chef 和 Puppet 是一些较老的、更成熟的选项，它们适用于那些重视成熟性和稳定性而非简单性的大型企业和环境。 Ansible 和 SaltStack 是寻求快速和简约解决方案人士的理想选择，同时在不需要支持某些特殊功能或具有大量操作系统的环境中工作。Fabric 对于小型环境和那些正在寻求更低门槛和入门级解决方案的人来说是一个很好的工具。</p>
<h2 id="SaltStack"><a href="#SaltStack" class="headerlink" title="SaltStack"></a>SaltStack</h2><ul>
<li>Arch:Client/Server</li>
<li>develop language: Python</li>
<li>future: REAL-TIME COMMUNICATION</li>
</ul>
<h4 id="SaltStack-ABC"><a href="#SaltStack-ABC" class="headerlink" title="SaltStack ABC"></a>SaltStack ABC</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## Install</span></div><div class="line">$ brew install saltstack</div><div class="line"><span class="comment">## Role:Master</span></div><div class="line">$ service salt-master start</div><div class="line">$ netstat -ant | grep 450 | grep LISTEN</div><div class="line">tcp4       0      0  *.4506                 *.*                    LISTEN     </div><div class="line">tcp4       0      0  *.4505                 *.*                    LISTEN</div><div class="line"><span class="comment">## Role:Master</span></div></pre></td></tr></table></figure>
<h4 id="SaltStack-Resources"><a href="#SaltStack-Resources" class="headerlink" title="SaltStack Resources"></a>SaltStack Resources</h4><ul>
<li><a href="https://github.com/saltstack-formulas" target="_blank" rel="external">SaltStack Formulas</a></li>
</ul>
<h2 id="Ansible"><a href="#Ansible" class="headerlink" title="Ansible"></a>Ansible</h2><ul>
<li>Arch: SSH batch tools</li>
<li>develop language: Python<h4 id="Ansible-ABC"><a href="#Ansible-ABC" class="headerlink" title="Ansible ABC"></a>Ansible ABC</h4></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Install</span></div><div class="line">$ sudo pip install ansible</div><div class="line"><span class="comment"># 默认路径 /etc/ansible/hosts ,参数 -i 指定 hosts 文件</span></div><div class="line">$ ansible all -m shell <span class="_">-a</span> <span class="string">"hostname"</span> --ask-pass -i /yourdir/ansible_hosts</div><div class="line"><span class="comment"># 或者通过环境变量指定</span></div><div class="line">$ <span class="built_in">export</span> ANSIBLE_HOSTS=~/ansible_hosts</div><div class="line">$ <span class="built_in">echo</span> <span class="string">"127.0.0.1"</span> &gt; ~/ansible_hosts</div></pre></td></tr></table></figure>
<h2 id="Puppet"><a href="#Puppet" class="headerlink" title="Puppet"></a>Puppet</h2><ul>
<li>Arch: Agent/Server</li>
<li>develop language: Ruby</li>
<li>enterprise &amp; community edition</li>
</ul>
<h4 id="Puppet-ABC"><a href="#Puppet-ABC" class="headerlink" title="Puppet ABC"></a>Puppet ABC</h4><h2 id="WordBook"><a href="#WordBook" class="headerlink" title="WordBook"></a>WordBook</h2><h4 id="YAML"><a href="#YAML" class="headerlink" title="YAML"></a><a href="http://yaml.org" target="_blank" rel="external">YAML</a></h4><p>YAML 语言（发音 /ˈjæməl/ ）实质上是一种通用的数据串行化格式。基本语法规则如下:</p>
<ul>
<li>大小写敏感</li>
<li>使用缩进表示层级关系</li>
<li>缩进时不允许使用Tab键，只允许使用空格。</li>
<li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</li>
<li># 表示行注释</li>
</ul>
<p>YAML 支持的数据结构：</p>
<ul>
<li>对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）</li>
<li>数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）</li>
<li><p>纯量（scalars）：单个的、不可再分的值</p>
</li>
<li><p><a href="http://www.ruanyifeng.com/blog/2016/07/yaml.html" target="_blank" rel="external">YAML 语言教程</a></p>
</li>
</ul>
<h4 id="DSL-Domain-Specific-Language-领域专用语言"><a href="#DSL-Domain-Specific-Language-领域专用语言" class="headerlink" title="DSL|Domain Specific Language,领域专用语言"></a><a href="https://en.wikipedia.org/wiki/Domain-specific_language" target="_blank" rel="external">DSL|Domain Specific Language,领域专用语言</a></h4><p>DSL的目标受众是非程序员，业务员或者最终用户。<br>DSL 最大的设计原则就是简单，通过简化语言中的元素，降低使用者的负担；无论是 Regex、SQL 还是 HTML 以及 CSS，其说明文档往往只有几页，非常易于学习和掌握。但是，由此带来的问题就是，DSL 中缺乏抽象的概念，比如：模块化、变量以及方法等。</p>
<ul>
<li><a href="http://www.infoq.com/cn/articles/dsl-discussion" target="_blank" rel="external">领域专用语言(DSL)迷思</a></li>
<li><a href="http://www.infoq.com/cn/articles/dsl-discussion" target="_blank" rel="external">谈谈 DSL 以及 DSL 的应用（以 CocoaPods 为例）</a></li>
</ul>
<h2 id="扩展阅读：DevOps-漫谈系列"><a href="#扩展阅读：DevOps-漫谈系列" class="headerlink" title="扩展阅读：DevOps 漫谈系列"></a>扩展阅读：<a href="https://riboseyim.github.io/2016/07/28/DevOps/" target="_blank" rel="external">DevOps 漫谈系列</a></h2><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/" target="_blank" rel="external">《凤凰项目》：从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/" target="_blank" rel="external">Kanban 看板管理实践</a></li>
<li><a href="https://riboseyim.github.io/2018/03/26/DevOps-Deployment/" target="_blank" rel="external">DevOps 漫谈：基础设施部署和配置管理</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/" target="_blank" rel="external">Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/" target="_blank" rel="external">工程师的自我修养：全英文技术学习实践</a></li>
</ul>
<h4 id="DevOps-实践的本质是文化"><a href="#DevOps-实践的本质是文化" class="headerlink" title="DevOps 实践的本质是文化"></a><a href="https://riboseyim.github.io/2018/03/29/DevOps-Culture/" target="_blank" rel="external">DevOps 实践的本质是文化</a></h4><ul>
<li>学习力－团队生命之根</li>
<li>带领团队翻译书籍</li>
<li>Don’t make me think</li>
<li>凡是被很多人不断重复的好习惯，要将其自动化整合到工具</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://blog.takipi.com/deployment-management-tools-chef-vs-puppet-vs-ansible-vs-saltstack-vs-fabric/" target="_blank" rel="external">Deployment Management Tools: Chef vs. Puppet vs. Ansible vs. SaltStack vs. Fabric</a></li>
<li><a href="https://www.zhihu.com/question/22707761" target="_blank" rel="external">SaltStack 与 Ansible 选择？| zhihu.com</a></li>
<li><a href="http://www.saltstack.cn" target="_blank" rel="external">中国SaltStack用户组|China SaltStack User Group</a></li>
<li><a href="http://www.saltstack.cn/kb/managing-firewall-with-salt/#managing-firewall-with-salt" target="_blank" rel="external">基于Salt管理iptables防火墙规则</a></li>
<li><a href="https://linux.cn/article-4215-1.html#3_875" target="_blank" rel="external">Ansible ：一个配置管理和IT自动化工具</a></li>
<li><a href="https://www.ibm.com/developerworks/cn/opensource/os-devops-saltstack-in-cloud/index.html" target="_blank" rel="external">自动化运维工具 SaltStack 在云计算环境中的实践</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Ansible vs. Chef vs. Fabric vs. Puppet vs. SaltStack&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="DevOps" scheme="http://riboseyim.github.com/tags/DevOps/"/>
    
      <category term="Linux" scheme="http://riboseyim.github.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>数学常识|如何度量复杂性</title>
    <link href="http://riboseyim.github.com/2018/03/25/Mathmetics-Complexity/"/>
    <id>http://riboseyim.github.com/2018/03/25/Mathmetics-Complexity/</id>
    <published>2018-03-25T12:05:04.000Z</published>
    <updated>2018-03-26T09:17:56.443Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>复杂系统、复杂度(Complexity)</li>
<li>如何度量复杂度：熵、算法信息量、逻辑深度、热力学深度、计算能力、层次性</li>
</ul>
<a id="more"></a>
<h2 id="如何度量复杂度"><a href="#如何度量复杂度" class="headerlink" title="如何度量复杂度"></a>如何度量复杂度</h2><p>2001 年，物理学家劳埃德（Seth Lloyd）发表了一篇文章（《Measures of complexity：A non-exhaustive list.  IEEE Control Systems Magazine, August 2001 》），分别从动力学、热力学、信息论等方面列出了 40 种度量复杂性的方法。提出了度量一个事物或过程的复杂性的三个维度：</p>
<ul>
<li>描述它有多困难 ？</li>
<li>产生它有多困难 ？</li>
<li>其组织程度如何 ？</li>
</ul>
<h4 id="用熵度量复杂性"><a href="#用熵度量复杂性" class="headerlink" title="用熵度量复杂性"></a>用熵度量复杂性</h4><p><strong>香农熵</strong>，相对于信息接收者的平均信息量或“惊奇度”。例如，假设消息由符号 A、C、G 和 T 组成。如果序列高度有序，如“A  A  A  A  A  A …… A ” 则熵为零。完全随机的序列则有最大可能熵。最复杂的对象不是最有序的或最随机的，而是介于两者之间。</p>
<p>在英语里，信息和情报是同一个词（Information），而我们知道情报的作用就是排除不确定性。</p>
<blockquote>
<p>如果没有信息，任何公式或者数字的游戏都无法排除不确定性。这个朴素的结论非常重要，但是在研究工作中经常被一些半瓶子醋的专家忽视，希望做这方面工作的读者谨记。(吴军 |《数学之美》)</p>
</blockquote>
<p>用香农熵度量复杂性的问题。首先，所针对的对象或过程需要转换成某种“消息”的形式，这并不总是那么容易做到。另外，随机消息的熵最高，但是那些最复杂的对象都不是完全随机的。例如变形虫的基因长度远远超过其他动植物，具备复杂功能的人类基因也不是随机的，甚至能看到长期历史演化出来的规律。</p>
<h4 id="用算法信息量度量复杂性"><a href="#用算法信息量度量复杂性" class="headerlink" title="用算法信息量度量复杂性"></a>用算法信息量度量复杂性</h4><p>为了改进熵度量复杂性的方法，1997 年柯尔莫哥洛夫（Andrey Kolmogorov）等人提出了算法信息量的概念。他们将事物的复杂度定义为能够产生对事物完整描述的最短计算机程序的长度。</p>
<p>为了计算有效复杂性，首先要给出事物规则性的最佳描述；有效复杂性定义为包含在描述中的信息量或规则集合的算法信息量。事物的结构可预测性越大，有效复杂性就越低。</p>
<p>对于一个事物的各种规则集，如何决定哪个是最好的呢？<strong>奥卡姆剃刀（Occam’s Razor, Ockham’s Razor）</strong>，意思是简约之法则。最好的规则集是能够描述事物的最小规则集，同时还能将事物的随机成分最小化。奥卡姆剃刀在现代医学中的应用最具代表性，医生和医学哲学家提出了 <strong>症状化约原则（diagnostic parsimony）</strong>。即在诊断某个病症时，医生应该尽量寻找会导致所有症状的最简单可能性。“当你听到背后有蹄声时，应该想到马而不是斑马。”  </p>
<p>虽然症状化约原则常常可能是正确的，然而也有争锋相对的意见：<strong>西卡姆格言（Hickam’s dictum）</strong>，“病人乐意得多少种病就能得多少种病。”  从统计数据看，一个病人的多种症状往往会归于多种常见疾病，而不是仅仅一种。另外，排除统计的因素，有许多病人无法使用单一疾病来解释众多的症状，被证实患有多种疾病。实际上，医生很难根据一个症状来判断是或者不是某个疾病，而是不断地根据病人的生活环境、日常习惯、用药史等等来建立、测试和修改对于症状的假设才是更好的方法。</p>
<h4 id="用逻辑深度度量复杂性"><a href="#用逻辑深度度量复杂性" class="headerlink" title="用逻辑深度度量复杂性"></a>用逻辑深度度量复杂性</h4><p>为了更加接近我们对复杂性的直觉，数学家班尼特在 20 世纪 80 年代初提出了 <strong>逻辑深度（logical depth）</strong> 的概念。</p>
<p>用班尼特的话说，“有逻辑深度的事物从根本上必须是长时间计算或漫长动力过程的产物，否则就不可能产生。” 或是像劳埃德说的，“用最合理的方法生成某个事物时需要处理的信息量等同于这个事物的复杂性，这是一个很吸引人的想法。”</p>
<h4 id="用热力学深度度量复杂性"><a href="#用热力学深度度量复杂性" class="headerlink" title="用热力学深度度量复杂性"></a>用热力学深度度量复杂性</h4><p>20 世纪 80 年代末，劳埃德和裴杰斯（Heinz Pagels）提出了一种复杂性度量方法：热力学深度（thermodynamic depth）。</p>
<p>与图灵机生成对事物的描述所需的时间步不同，热力学深度首先是确定“产生出这个事物最科学合理的确定事件序列”，然后测量“物理构造过程所需的热力源和信息源的总量”。例如，要确定人类基因组的热力学深度，得从最早出现的第一个生物的基因组开始，列出直到现代人类出现的所有遗传演化事件（随机变异、重组、基因复制等）。</p>
<p>问题：如何定义系统的状态粒度，在列出事件时，如何确定相关的宏观状态。</p>
<h4 id="用计算能力度量复杂性"><a href="#用计算能力度量复杂性" class="headerlink" title="用计算能力度量复杂性"></a>用计算能力度量复杂性</h4><p>一种观点认为，系统的计算能力如果等价于通用图灵机的计算能力，就是复杂系统。不过，班尼特等人则认为，具有执行通用计算的能力并不意味着系统本身就是复杂的；应当测量的是<strong>系统处理输入时的行为的复杂性</strong>。</p>
<h4 id="用层次性度量复杂性"><a href="#用层次性度量复杂性" class="headerlink" title="用层次性度量复杂性"></a>用层次性度量复杂性</h4><p>如何用层次（degree of hierarchy）来刻画一个系统的复杂性：复杂系统由子系统组成，子系统下面又有子系统，不断往下。（《复杂性的结构》：The architecture of complexity. Simon 1962）</p>
<p>西蒙认为，复杂系统最重要的共性就是 <strong>层次性</strong> 和 <strong>不可分解性</strong>。在层次性复杂系统中，子系统内部的紧密相互作用比子系统之间要多得多。例如，细胞内部的新陈代谢网络就比细胞之间的作用要复杂得多。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>各种度量复杂性的方法都抓住了一些方面，但都存在理论上和实践上的局限性，还远不能有效刻画实际系统的复杂性，度量方法的多样性也表明复杂系统具有许多维度，无法用单一的尺度来刻画。</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/" target="_blank" rel="external">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/" target="_blank" rel="external">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/" target="_blank" rel="external">数据可视化（三）基于 Graphviz 实现程序化绘图 | 开源中国首页推荐·每日一博</a></li>
<li>Why draw when you can code?</li>
<li>Graphviz 简介</li>
<li>最佳 Graphviz 实践：流程图、数据结构图、网络路径 Trace Route、复杂社会关系链分析、机器学习算法-决策树(Decision Tree)</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li>2001 劳埃德（Seth Lloyd）《Measures of complexity：A non-exhaustive list.  IEEE Control Systems Magazine, August 2001 》</li>
<li>1962 Simon《复杂性的结构》：The architecture of complexity.</li>
<li><a href="https://www.guokr.com/article/172437/" target="_blank" rel="external">如何测出一句话中的信息量</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;复杂系统、复杂度(Complexity)&lt;/li&gt;
&lt;li&gt;如何度量复杂度：熵、算法信息量、逻辑深度、热力学深度、计算能力、层次性&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="架构师" scheme="http://riboseyim.github.com/tags/%E6%9E%B6%E6%9E%84%E5%B8%88/"/>
    
      <category term="数学与算法" scheme="http://riboseyim.github.com/tags/%E6%95%B0%E5%AD%A6%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
      <category term="科技史" scheme="http://riboseyim.github.com/tags/%E7%A7%91%E6%8A%80%E5%8F%B2/"/>
    
  </entry>
  
  <entry>
    <title>Machine Learning:WordBook</title>
    <link href="http://riboseyim.github.com/2018/03/21/Machine-Learning-WordBook/"/>
    <id>http://riboseyim.github.com/2018/03/21/Machine-Learning-WordBook/</id>
    <published>2018-03-21T03:08:01.000Z</published>
    <updated>2018-05-07T12:57:04.274Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Basic"><a href="#Basic" class="headerlink" title="Basic"></a>Basic</h2><h2 id="数学概念"><a href="#数学概念" class="headerlink" title="数学概念"></a>数学概念</h2><ul>
<li>泰勒级数 Taylor series</li>
</ul>
<p>用无限项连加式——级数来表示一个函数，这些相加的项由函数在某一点的导数求得，以 1715 年发表了泰勒公式的英国数学家布鲁克·泰勒（Sir Brook Taylor）来命名。通过函数在自变量零点的导数求得的泰勒级数又叫做麦克劳林级数，以苏格兰数学家科林·麦克劳林的名字命名。</p>
<ul>
<li>导数 Derivative</li>
</ul>
<p>导数（Derivative）是微积分学中重要的基础概念。一个函数在某一点的导数描述了这个函数在这一点附近的变化率。导数的本质是通过极限的概念对函数进行局部的线性逼近。</p>
<ul>
<li>偏导数 Partial Derivatives</li>
</ul>
<p>在数学中，一个多变量的函数的偏导数是它关于其中一个变量的导数，而保持其他变量恒定（相对于全导数，在其中所有变量都允许变化）</p>
<ul>
<li>超参数 Hyper Parameter</li>
</ul>
<p>在机器学习中，超参数是在学习过程开始之前设置的一个参数。相比之下，其他参数的值是通过训练得到的。</p>
<p>不同的模型训练算法需要不同的超参数，一些简单的算法（如普通最小二乘回归）不需要。给定这些超参数，训练算法从数据中学习参数。例如，LASSO 是一种算法，将正则化超参数添加到普通最小二乘回归中，它必须在通过训练算法估计参数之前设置。在深度学习中，常见的超参数有：学习速率，迭代次数，层数，每层神经元的个数等。</p>
<ul>
<li>激活函数 Activation Function</li>
</ul>
<p>在 计算网络中， 一个节点的激活函数定义了该节点在给定的输入或输入的集合下的输出</p>
<h2 id="Deep-Learning"><a href="#Deep-Learning" class="headerlink" title="Deep Learning"></a>Deep Learning</h2><h4 id="Neural-Network"><a href="#Neural-Network" class="headerlink" title="Neural Network"></a>Neural Network</h4><ul>
<li>神经网络（Neural Network，缩写 NN）</li>
<li>人工神经网络（Artificial Neural Network，缩写 ANN）</li>
</ul>
<p>人工神经网络（Artificial neural network，缩写ANN），简称神经网络（neural network，缩写NN）或类神经网络，是一种模仿生物神经网络(动物的中枢神经系统，特别是大脑)的结构和功能的数学模型或计算模型。神经网络由大量的人工神经元联结进行计算。大多数情况下人工神经网络能在外界信息的基础上改变内部结构，是一种自适应系统。现代神经网络是一种非线性统计性数据建模工具，常用来对输入和输出间复杂的关系进行建模，或用来探索数据的模式。</p>
<h4 id="Convolutional-Neural-Network"><a href="#Convolutional-Neural-Network" class="headerlink" title="Convolutional Neural Network"></a>Convolutional Neural Network</h4><ul>
<li>卷积神经网络(Convolutional Neural Network,缩写 CNN )<br>In machine learning, a convolutional neural network (CNN, or ConvNet) is a type of feed-forward artificial neural network in which the connectivity pattern between its neurons is inspired by the organization of the animal visual cortex, whose individual neurons are arranged in such a way that they respond to overlapping regions tiling the visual field. Convolutional networks were inspired by biological processes and are variations of multilayer perceptrons designed to use minimal amounts of preprocessing. They have wide applications in image and video recognition, recommender systems and natural language processing.</li>
</ul>
<h4 id="RNN"><a href="#RNN" class="headerlink" title="RNN"></a>RNN</h4><ul>
<li>RNN 一般指代时间递归神经网络(Recurrent Neural Network)</li>
<li>结构递归神经网络(Recursive Neural Network)</li>
</ul>
<p>A recurrent neural network (RNN) is a class of artificial neural network where connections between units form a directed cycle. This creates an internal state of the network which allows it to exhibit dynamic temporal behavior. Unlike feedforward neural networks, RNNs can use their internal memory to process arbitrary sequences of inputs. This makes them applicable to tasks such as unsegmented connected handwriting recognition or speech recognition.</p>
<p>递归神经网络（RNN）是两种人工神经网络的总称。时间递归神经网络的神经元间连接构成有向图，而结构递归神经网络利用相似的神经网络结构递归构造更为复杂的深度网络。单纯递归神经网络因为无法处理随着递归，权重指数级爆炸或消失的问题（Vanishing gradient problem），难以捕捉长期时间关联；而结合不同的LSTM可以很好解决这个问题。</p>
<h4 id="GAN"><a href="#GAN" class="headerlink" title="GAN"></a>GAN</h4><p>Generative Adversarial Network，生成对抗网络<br>非监督式学习的一种方法，通过让两个神经网络相互博弈的方式进行学习。该方法由伊恩·古德费洛等人于2014年提出）</p>
<h4 id="Autoencoders-自动编码"><a href="#Autoencoders-自动编码" class="headerlink" title="Autoencoders 自动编码"></a>Autoencoders 自动编码</h4><h4 id="Reinforcement-Learning-强化学习"><a href="#Reinforcement-Learning-强化学习" class="headerlink" title="Reinforcement Learning 强化学习"></a>Reinforcement Learning 强化学习</h4><p>Reinforcement learning is an area of machine learning inspired by behaviorist psychology, concerned with how software agents ought to take actions in an environment so as to maximize some notion of cumulative reward. The problem, due to its generality, is studied in many other disciplines, such as game theory, control theory, operations research, information theory, simulation-based optimization, multi-agent systems, swarm intelligence, statistics, and genetic algorithms. In the operations research and control literature, the field where reinforcement learning methods are studied is called approximate dynamic programming. The problem has been studied in the theory of optimal control, though most studies are concerned with the existence of optimal solutions and their characterization, and not with the learning or approximation aspects. In economics and game theory, reinforcement learning may be used to explain how equilibrium may arise under bounded rationality.</p>
<p>强化学习是机器学习中的一个领域，强调如何基于环境而行动，以取得最大化的预期利益。其灵感来源于心理学中的行为主义理论，即有机体如何在环境给予的奖励或惩罚的刺激下，逐步形成对刺激的预期，产生能获得最大利益的习惯性行为。这个方法具有普适性，因此在其他许多领域都有研究，例如博弈论、控制论、运筹学、信息论、模拟优化方法、多主体系统学习、群体智能、统计学以及遗传算法。在运筹学和控制理论研究的语境下，强化学习被称作“近似动态规划”（approximate dynamic programming，ADP）。在最优控制理论中也有研究这个问题，虽然大部分的研究是关于最优解的存在和特性，并非是学习或者近似方面。在经济学和博弈论中，强化学习被用来解释在有限理性的条件下如何出现平衡。</p>
<h2 id="Open-Source-Library"><a href="#Open-Source-Library" class="headerlink" title="Open Source Library"></a>Open Source Library</h2><h4 id="TensorFlow"><a href="#TensorFlow" class="headerlink" title="TensorFlow"></a>TensorFlow</h4><p>TensorFlow is an open source software library for machine learning in various kinds of perceptual and language understanding tasks. It is a second-generation API which is currently used for both research and production by 50 different teams in dozens of commercial Google products, such as speech recognition, Gmail, Google Photos, and Search. These teams had previously used DistBelief, a first-generation API. TensorFlow was originally developed by the Google Brain team for Google’s research and production purposes and later released under the Apache 2.0 open source license on November 9, 2015.</p>
<h4 id="Scikit-Learn-机器学习算法库"><a href="#Scikit-Learn-机器学习算法库" class="headerlink" title="Scikit-Learn 机器学习算法库"></a>Scikit-Learn 机器学习算法库</h4><p>Scikit-Learn(formerly scikits.learn) is a free software machine learning library for the Python programming language. It features various classification, regression and clustering algorithms including support vector machines, random forests, gradient boosting, k-means and DBSCAN, and is designed to interoperate with the Python numerical and scientific libraries NumPy and SciPy.</p>
<h4 id="COCO-SSD"><a href="#COCO-SSD" class="headerlink" title="COCO SSD"></a>COCO SSD</h4><p>Ok that worked pretty well, but how do we deal with images that show multiple objects. Well to recognize multiple objects in a single image, we will utilize what’s called a Single Shot Multibox Detector (SSD). In our second example we will look at a SSD model trained with the COCO (Common Object in Context) dataset. The model we are using has been trained on 84 different classes.</p>
<h2 id="扩展阅读-《The-Machine-Learning-Master》"><a href="#扩展阅读-《The-Machine-Learning-Master》" class="headerlink" title="扩展阅读:《The Machine Learning Master》"></a>扩展阅读:<a href="https://www.gitbook.com/book/riboseyim/machine-learning" target="_blank" rel="external">《The Machine Learning Master》</a></h2><p><img src="http://p11slcnom.bkt.clouddn.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/" target="_blank" rel="external">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/" target="_blank" rel="external">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/" target="_blank" rel="external">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/" target="_blank" rel="external">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/" target="_blank" rel="external">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network" target="_blank" rel="external">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/" target="_blank" rel="external">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News" target="_blank" rel="external">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/" target="_blank" rel="external">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/" target="_blank" rel="external">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/" target="_blank" rel="external">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;
    
    </summary>
    
    
      <category term="Machine-Learning" scheme="http://riboseyim.github.com/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>Machine-Learning-TensorFlow-ProtoBuf</title>
    <link href="http://riboseyim.github.com/2018/03/20/Machine-Learning-TensorFlow-ProtoBuf/"/>
    <id>http://riboseyim.github.com/2018/03/20/Machine-Learning-TensorFlow-ProtoBuf/</id>
    <published>2018-03-20T09:41:30.000Z</published>
    <updated>2018-04-13T01:49:16.809Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://medium.com/@dboyliao/%E7%B0%A1%E4%BB%8B-google-protocol-buffer-1dd5fa2e1e69" target="_blank" rel="external">簡介 Google Protocol Buffer</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/31308381" target="_blank" rel="external">Tensorflow框架实现中的“三”种图</a></li>
<li><a href="http://blog.csdn.net/huachao1001/article/details/78502910" target="_blank" rel="external">Tensorflow将模型导出为一个文件及接口设置</a></li>
<li><a href="https://towardsdatascience.com/how-to-use-dataset-in-tensorflow-c758ef9e4428" target="_blank" rel="external">How to use Dataset in TensorFlow| The built-in Input Pipeline. Never use ‘feed-dict’ anymore</a></li>
<li><a href="https://towardsdatascience.com/deploy-tensorflow-models-9813b5a705d5" target="_blank" rel="external">Deploy TensorFlow models | Super fast and concise tutorial</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Machine Learning:经济学家谈人工智能</title>
    <link href="http://riboseyim.github.com/2018/03/09/Machine-Learning-Economist/"/>
    <id>http://riboseyim.github.com/2018/03/09/Machine-Learning-Economist/</id>
    <published>2018-03-09T08:55:07.000Z</published>
    <updated>2018-05-07T12:58:07.526Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>为什么人工智能的繁荣没有提高生产率</li>
<li>Artificial Intelligence is a General Purpose Technology</li>
<li>Measuring AI Capital</li>
</ul>
<a id="more"></a>
<h2 id="Previous-Posts"><a href="#Previous-Posts" class="headerlink" title="Previous Posts"></a>Previous Posts</h2><ul>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News" target="_blank" rel="external">Machine Learning:人工智能媒体报道集</a></li>
<li>媒体报道|经济学人：译者的悲伤 | 20170527</li>
<li>媒体报道|经济学人：计算机如何学习人类语言？| 20170111</li>
</ul>
<h2 id="为什么人工智能的繁荣没有提高生产率"><a href="#为什么人工智能的繁荣没有提高生产率" class="headerlink" title="为什么人工智能的繁荣没有提高生产率"></a>为什么人工智能的繁荣没有提高生产率</h2><p>人工智能技术的进步无处不在，从自动驾驶汽车到机器人助理到高级语音识别。到处都是，除了生产力统计数据。这种情况看起来像是索洛悖论（Solow Paradox，又称 Productivity Paradox 生产率悖论）的重演，1987 年由麻省理工学院（ MIT，Massachusetts Institute of Technology）经济学家和诺贝尔奖得主罗伯特·索洛所阐述的理论。最近一项研究认为索洛悖论的罪魁祸首可能是实施新技术的滞后，研究人员包括 MIT 斯隆管理学院的教授 <a href="http://ebusiness.mit.edu/erik/" target="_blank" rel="external">Erik Brynjolfsson</a>，MIT 博士生 Daniel Rock 和芝加哥大学布斯商学院（University of Chicago Booth School of Business）的经济学教授 <a href="https://www.chicagobooth.edu/faculty/directory/s/chad-syverson" target="_blank" rel="external">Chad Syverson</a>。</p>
<p>根据市场调研公司 CB Insights 的数据，尽管以科技为中心的纳斯达克综合指数（Nasdaq Composite Index）从 2012 年到 2017 年翻了一番，与人工智能相关的技术投资在 2016 年激增了八倍以上、超过 50 亿美元。但这些并没有促进劳动生产率（labor-productivity）的增长，2005 年到 2017 年的增长率还不到 1995 年至 2004 年年均增长率（3％）的一半。</p>
<p>尽管如此，研究人员认为依然有理由持乐观态度，他们认为新技术需要时间在整个经济中传播和实施。他们引用了蒸汽机，电力和内燃机的案例，这些发明都是通过几年和几十年的时间才发挥变革性影响。因为这些技术的广泛应用还需要其他配套技术创新。研究人员指出，交流电安全实用三十年后，至少有一半的美国制造商还没有通电，因为制造商还没有弄清楚如何基于小型电动机重组生产过程。研究人员说这并不罕见; 企业几乎总是花费更多的精力来重新设计业务流程和培训人员，而不是为自己购买新技术。</p>
<h4 id="Artificial-Intelligence-is-a-General-Purpose-Technology"><a href="#Artificial-Intelligence-is-a-General-Purpose-Technology" class="headerlink" title="Artificial Intelligence is a General Purpose Technology"></a><strong>Artificial Intelligence is a General Purpose Technology</strong></h4><blockquote>
<p>As important as specific applications of AI may be, we argue that the more important economic effects of AI, machine learning, and associated new technologies stem from the fact that they embody the characteristics of general purpose technologies (GPTs).</p>
</blockquote>
<p>例如，机器学习系统（machine learning system）已经将机器的能力转化为执行许多基本的知觉类型，以实现更广泛的应用。机器视觉 – 查看和识别物体的能力，在照片中标记它们，并解读视频流。识别错误率地改善，从1/30(帧) 提高到 1/30万(帧)，自动驾驶汽车越来越具有可行性。</p>
<p><img src="http://omb2onfvy.bkt.clouddn.com/ML-Paper-Paradox.png" alt="AI技术进步&amp;图像识别错误率"></p>
<h4 id="Measuring-AI-Capital"><a href="#Measuring-AI-Capital" class="headerlink" title="Measuring AI Capital"></a><strong>Measuring AI Capital</strong></h4><p>研究人员提出人工智能应视为新的资本形式，确切说是一种无形资本，这种资本会随着投资的增加而累积，会对生产率持续产生作用，其价值会发生折旧（随着时间流逝而贬值）。</p>
<p>引入人工智能技术而产生的成本、组织变革、新技能等因素需要纳入到无形资本的框架当中并构建新的预测模型（J-Curve），随后的实证研究表明，新的模型可以更好地反映技术对生产率增长的影响作用。</p>
<p>人工智能的影响评估结果取决于各国统计方案中如何衡量人工智能资本（AI ）。人工智能资本计量的主要困难在于其许多产出将是无形的。人工智能大量使用在财务上体现作为其他资本的投入，包括新型软件，以及人力和组织资本，而不是最终消费品。包括人力资本在内的其他大部分资本，与 AI 本身一样，大部分都是无形的。</p>
<p>更具体地说，有效使用人工智能需要开发数据集，建立企业的专业人力资本，并实施新的业务流程。这些都需要大量的资本支出和维护。在古典增长核算模型中，这些无形支出的有形对应物（包括计算资源，服务器和房地产的购买）很容易衡量。另一方面，与之配套的生产投资价值则很难量化。在购买资本资产后，企业还会产生额外的调整成本（adjustment costs）。例如，业务流程重新设计和安装成本。</p>
<blockquote>
<p>Much of the market value of AI capital specifically and IT capital more generally may be derived from the capitalized short-term quasi-rents earned by firms that have already reorganized to extract service flows from new investment.</p>
</blockquote>
<p><img src="http://omb2onfvy.bkt.clouddn.com/ML-Paper-Paradox-Growth.png" alt=""></p>
<p>人工智能悖论与世界的变化是一致的。研究人员考虑了悖论的其他可能原因，其中包括对 AI 的盲目乐观，生产力效益正在发生但被误判，新技术的收益存在但仅限于一小部分工人，给出的解释是实现延迟（<strong>here’s an implementation delay</strong>）。他们写道：“这种看似悖论的两半都是正确的”。在这个观点中，预示着随着应用的扩展，人工智能技术突破对生产力的影响将越来越大。人工智能投资成本高昂，需要配套设施的发展，需要时间和资源来实施。</p>
<h4 id="背景知识：索洛悖论"><a href="#背景知识：索洛悖论" class="headerlink" title="背景知识：索洛悖论"></a>背景知识：索洛悖论</h4><p>20世纪80年代末，美国学者查斯曼(Strassman)调查了292个企业，结果发现这些企业的IT投资和投资回报率(ROI)之间没有明显的关联。</p>
<p>1987 年获得诺贝尔奖的经济学家罗伯特·索洛(Robert Solow)将这种现象称为“生产率悖论”(Productivity Paradox)：“我们到处都看得见计算机，就是在生产率统计方面却看不见计算机（Computers everywhere except in the productivity statistics.）”。</p>
<h2 id="扩展阅读-《The-Machine-Learning-Master》"><a href="#扩展阅读-《The-Machine-Learning-Master》" class="headerlink" title="扩展阅读:《The Machine Learning Master》"></a>扩展阅读:<a href="https://www.gitbook.com/book/riboseyim/machine-learning" target="_blank" rel="external">《The Machine Learning Master》</a></h2><p><img src="http://p11slcnom.bkt.clouddn.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/" target="_blank" rel="external">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/" target="_blank" rel="external">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/" target="_blank" rel="external">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/" target="_blank" rel="external">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/" target="_blank" rel="external">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network" target="_blank" rel="external">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/" target="_blank" rel="external">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News" target="_blank" rel="external">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/" target="_blank" rel="external">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/" target="_blank" rel="external">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/" target="_blank" rel="external">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.nber.org/chapters/c14007.pdf" target="_blank" rel="external">Artificial Intelligence and the Modern Productivity Paradox: A Clash of Expectations and Statistics</a></li>
<li><a href="http://review.chicagobooth.edu/economics/2018/article/why-ai-boom-isn-t-boosting-productivity" target="_blank" rel="external">why-ai-boom-isn-t-boosting-productivity</a></li>
<li><a href="https://mp.weixin.qq.com/s/WOlrTOUjU0srGAOMg1_ASg" target="_blank" rel="external">论文代写了解一下：要价63000美元的枪手论文是如何产生的？</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;为什么人工智能的繁荣没有提高生产率&lt;/li&gt;
&lt;li&gt;Artificial Intelligence is a General Purpose Technology&lt;/li&gt;
&lt;li&gt;Measuring AI Capital&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Nature&amp;Science" scheme="http://riboseyim.github.com/tags/Nature-Science/"/>
    
      <category term="Policy&amp;Law" scheme="http://riboseyim.github.com/tags/Policy-Law/"/>
    
      <category term="Economist" scheme="http://riboseyim.github.com/tags/Economist/"/>
    
      <category term="Manager" scheme="http://riboseyim.github.com/tags/Manager/"/>
    
      <category term="Machine-Learning" scheme="http://riboseyim.github.com/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>Machine-Learning-Keras</title>
    <link href="http://riboseyim.github.com/2018/03/07/Machine-Learning-Keras/"/>
    <id>http://riboseyim.github.com/2018/03/07/Machine-Learning-Keras/</id>
    <published>2018-03-07T06:14:22.000Z</published>
    <updated>2018-03-07T10:13:35.005Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><ul>
<li><a href="https://github.com/emilwallner/Screenshot-to-code-in-Keras" target="_blank" rel="external">A neural network that transforms a screenshot into a static website</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://blog.cloudera.com/blog/2017/07/prophecy-fulfilled-keras-and-cloudera-data-science-workbench/" target="_blank" rel="external">Prophecy Fulfilled: Keras and Cloudera Data Science Workbench</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;
    
    </summary>
    
    
      <category term="Machine-Learning" scheme="http://riboseyim.github.com/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>Machine-Learning-NLP</title>
    <link href="http://riboseyim.github.com/2018/03/07/Machine-Learning-NLP/"/>
    <id>http://riboseyim.github.com/2018/03/07/Machine-Learning-NLP/</id>
    <published>2018-03-07T06:10:01.000Z</published>
    <updated>2018-03-07T10:08:57.826Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://blog.insightdatascience.com/how-to-solve-90-of-nlp-problems-a-step-by-step-guide-fda605278e4e" target="_blank" rel="external">How to solve 90% of NLP problems: a step-by-step guide | Using Machine Learning to understand and leverage text</a></li>
<li><a href="https://unsupervisedmethods.com/learning-machine-learning-and-nlp-from-185-quora-questions-cebe42e47da8?source=rss----604640a9497a---4" target="_blank" rel="external">Robbie Allen:Learning Machine Learning and NLP from 187 Quora Questions</a></li>
<li><a href="http://www.infoq.com/cn/news/2017/02/zero-shot-translation?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global" target="_blank" rel="external">Google神经机器翻译系统实现Zero-Shot翻译</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;
    
    </summary>
    
    
      <category term="Machine-Learning" scheme="http://riboseyim.github.com/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>电子书：《数据可视化》</title>
    <link href="http://riboseyim.github.com/2018/03/02/eBook-DVM/"/>
    <id>http://riboseyim.github.com/2018/03/02/eBook-DVM/</id>
    <published>2018-03-02T07:46:04.000Z</published>
    <updated>2018-04-13T02:25:03.963Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><a href="https://legacy.gitbook.com/book/riboseyim/ebook-data-visualization-master" target="_blank" rel="external">https://legacy.gitbook.com/book/riboseyim/ebook-data-visualization-master</a><br><a id="more"></a></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://legacy.gitbook.com/book/riboseyim/ebook-data-visualization-master" target="_blank" rel="external">https://legacy.gitbook.com/book/riboseyim/ebook-data-visualization-master</a></p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>国内用户访问GitBook不太稳定，提供百度云快捷下载，同时提供了pdf、mobi、ePub三种格式。</p>
<h2 id="历史版本"><a href="#历史版本" class="headerlink" title="历史版本"></a>历史版本</h2><p><strong>基本原则：持续发布，争取做到每四个月发布一个新版本</strong></p>
<h4 id="Edition-0-1"><a href="#Edition-0-1" class="headerlink" title="Edition 0.1"></a>Edition 0.1</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://legacy.gitbook.com/book/riboseyim/ebook-data-visualization-master&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://legacy.gitbook.com/book/riboseyim/ebook-data-visualization-master&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="最佳工程实践" scheme="http://riboseyim.github.com/tags/%E6%9C%80%E4%BD%B3%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
      <category term="架构师" scheme="http://riboseyim.github.com/tags/%E6%9E%B6%E6%9E%84%E5%B8%88/"/>
    
      <category term="DevOps" scheme="http://riboseyim.github.com/tags/DevOps/"/>
    
      <category term="数据可视化" scheme="http://riboseyim.github.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="Linux" scheme="http://riboseyim.github.com/tags/Linux/"/>
    
      <category term="Developer" scheme="http://riboseyim.github.com/tags/Developer/"/>
    
      <category term="最佳写作实践" scheme="http://riboseyim.github.com/tags/%E6%9C%80%E4%BD%B3%E5%86%99%E4%BD%9C%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>电子书：《The Cyber-Security Master》</title>
    <link href="http://riboseyim.github.com/2018/03/02/eBook-CSM/"/>
    <id>http://riboseyim.github.com/2018/03/02/eBook-CSM/</id>
    <published>2018-03-02T07:45:44.000Z</published>
    <updated>2018-03-29T06:16:40.632Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><img src="http://p11slcnom.bkt.clouddn.com/banner-CSM-201803.png" alt=""><br><a href="https://www.gitbook.com/book/riboseyim/cyber-security-manual" target="_blank" rel="external">https://www.gitbook.com/book/riboseyim/cyber-security-manual</a></p>
<a id="more"></a>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul>
<li>Chapter 1: 网络监控技术</li>
<li>性能优化思路：从珠海航展交通管控实践谈起</li>
<li>新一代Ntopng网络流量监控—可视化和架构分析</li>
<li>基于数据分析的网络态势感知</li>
<li>网络数据包的捕获、过滤和分析</li>
<li>Chapter 2: 网络安全技术</li>
<li>警惕 Wi-Fi 漏洞，争取安全上网</li>
<li>Web应用安全：攻击、防护和检测</li>
<li>IPv6 网络协议与网络安全</li>
<li>OpenSSH 并不安全</li>
<li>Linux/XOR.DDoS 木马样本分析</li>
<li>Chapter 3: 网络安全治理</li>
<li>事与愿违的后门程序</li>
<li>美国网络安全立法策略</li>
<li>香港警务处网络安全与科技罪案调查科</li>
</ul>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>国内用户访问GitBook不太稳定，提供百度云快捷下载，同时提供了pdf、mobi、ePub三种格式。</p>
<h2 id="历史版本"><a href="#历史版本" class="headerlink" title="历史版本"></a>历史版本</h2><p><strong>基本原则：持续发布，争取做到每四个月发布一个新版本</strong></p>
<h4 id="Edition-0-1"><a href="#Edition-0-1" class="headerlink" title="Edition 0.1"></a>Edition 0.1</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://p11slcnom.bkt.clouddn.com/banner-CSM-201803.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://www.gitbook.com/book/riboseyim/cyber-security-manual&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.gitbook.com/book/riboseyim/cyber-security-manual&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="最佳工程实践" scheme="http://riboseyim.github.com/tags/%E6%9C%80%E4%BD%B3%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
      <category term="架构师" scheme="http://riboseyim.github.com/tags/%E6%9E%B6%E6%9E%84%E5%B8%88/"/>
    
      <category term="DevOps" scheme="http://riboseyim.github.com/tags/DevOps/"/>
    
      <category term="Policy&amp;Law" scheme="http://riboseyim.github.com/tags/Policy-Law/"/>
    
      <category term="Cyber-Security" scheme="http://riboseyim.github.com/tags/Cyber-Security/"/>
    
      <category term="Linux" scheme="http://riboseyim.github.com/tags/Linux/"/>
    
      <category term="Developer" scheme="http://riboseyim.github.com/tags/Developer/"/>
    
      <category term="SRE" scheme="http://riboseyim.github.com/tags/SRE/"/>
    
      <category term="最佳写作实践" scheme="http://riboseyim.github.com/tags/%E6%9C%80%E4%BD%B3%E5%86%99%E4%BD%9C%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>电子书：《Machine Learning Master》</title>
    <link href="http://riboseyim.github.com/2018/03/02/eBook-MLM/"/>
    <id>http://riboseyim.github.com/2018/03/02/eBook-MLM/</id>
    <published>2018-03-02T07:45:40.000Z</published>
    <updated>2018-03-29T06:17:47.374Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><img src="http://p11slcnom.bkt.clouddn.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://www.gitbook.com/book/riboseyim/machine-learning" target="_blank" rel="external">《The Machine Learning Master | 机器学习专家》</a></li>
</ul>
<a id="more"></a>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul>
<li>Chapter 1: 机器学习导论</li>
<li>Machine Learning(一):基于 TensorFlow 实现宠物血统智能识</li>
<li>Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</li>
<li>机器学习算法 Top 10</li>
<li>机器学习项目 Top 30</li>
<li>Chapter N: 媒体报道集</li>
<li>经济学人：计算机如何学习人类语言？</li>
<li>经济学人：译者为何忧虑？</li>
</ul>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>国内用户访问GitBook不太稳定，提供百度云快捷下载，同时提供了pdf、mobi、ePub三种格式。</p>
<h2 id="历史版本"><a href="#历史版本" class="headerlink" title="历史版本"></a>历史版本</h2><p><strong>基本原则：持续发布，争取做到每四个月发布一个新版本</strong></p>
<h4 id="Edition-0-1"><a href="#Edition-0-1" class="headerlink" title="Edition 0.1"></a>Edition 0.1</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://p11slcnom.bkt.clouddn.com/banner-MLM-201803.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/riboseyim/machine-learning&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《The Machine Learning Master | 机器学习专家》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="最佳工程实践" scheme="http://riboseyim.github.com/tags/%E6%9C%80%E4%BD%B3%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
      <category term="架构师" scheme="http://riboseyim.github.com/tags/%E6%9E%B6%E6%9E%84%E5%B8%88/"/>
    
      <category term="DevOps" scheme="http://riboseyim.github.com/tags/DevOps/"/>
    
      <category term="Linux" scheme="http://riboseyim.github.com/tags/Linux/"/>
    
      <category term="Developer" scheme="http://riboseyim.github.com/tags/Developer/"/>
    
      <category term="数学与算法" scheme="http://riboseyim.github.com/tags/%E6%95%B0%E5%AD%A6%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
      <category term="Machine-Learning" scheme="http://riboseyim.github.com/tags/Machine-Learning/"/>
    
      <category term="最佳写作实践" scheme="http://riboseyim.github.com/tags/%E6%9C%80%E4%BD%B3%E5%86%99%E4%BD%9C%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>Machine Learning:Training Models</title>
    <link href="http://riboseyim.github.com/2018/02/27/Machine-Learning-TrainModel/"/>
    <id>http://riboseyim.github.com/2018/02/27/Machine-Learning-TrainModel/</id>
    <published>2018-02-27T06:23:57.000Z</published>
    <updated>2018-05-07T12:57:09.905Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Previous"><a href="#Previous" class="headerlink" title="Previous"></a>Previous</h2><p>前文回顾：</p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/" target="_blank" rel="external">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/" target="_blank" rel="external">Machine Learning (二) : 宠物智能识别之 Using OpenCV with Node.js</a></li>
</ul>
<p>上面的文章中提到了机器学习的预测结果受模型质量的影响很大，如果想要取得好的效果需要通过训练增强优化。</p>
<h4 id="Training-Data"><a href="#Training-Data" class="headerlink" title="Training Data"></a>Training Data</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl http://download.tensorflow.org/example_images/flower_photos.tgz \| tar xz -C tf_files</div></pre></td></tr></table></figure>
<h4 id="Training-the-Network"><a href="#Training-the-Network" class="headerlink" title="Training the Network"></a>Training the Network</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/googlecodelabs/tensorflow-for-poets-2</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">python scripts/retrain.py</div><div class="line">--image_dir=tf_files/flower_photos</div><div class="line">--output_graph=tf_files/retrained_graph.pb</div><div class="line">--output_labels=tf_files/retrained_labels.txt</div></pre></td></tr></table></figure>
<h4 id="Test-Using-the-Retrained-Model"><a href="#Test-Using-the-Retrained-Model" class="headerlink" title="Test:Using the Retrained Model"></a>Test:Using the Retrained Model</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python scripts/label_image.py --image data/daisy.jpg</div></pre></td></tr></table></figure>
<h2 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div></pre></td><td class="code"><pre><div class="line">node &#123;</div><div class="line">  <span class="attr">name</span>: <span class="string">"DecodeJpeg/contents"</span></div><div class="line">  op: <span class="string">"Const"</span></div><div class="line">  attr &#123;</div><div class="line">    <span class="attr">key</span>: <span class="string">"dtype"</span></div><div class="line">    value &#123;</div><div class="line">      <span class="attr">type</span>: DT_STRING</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  attr &#123;</div><div class="line">    <span class="attr">key</span>: <span class="string">"value"</span></div><div class="line">    value &#123;</div><div class="line">      tensor &#123;</div><div class="line">        <span class="attr">dtype</span>: DT_STRING</div><div class="line">        tensor_shape &#123;</div><div class="line">        &#125;</div><div class="line">        string_val: <span class="string">"\377\330......."</span></div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">node &#123;</div><div class="line"><span class="attr">name</span>: <span class="string">"softmax/biases"</span></div><div class="line">op: <span class="string">"Const"</span></div><div class="line">attr &#123;</div><div class="line"><span class="attr">key</span>: <span class="string">"dtype"</span></div><div class="line">value &#123;</div><div class="line"><span class="attr">type</span>: DT_FLOAT</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">attr &#123;</div><div class="line"><span class="attr">key</span>: <span class="string">"value"</span></div><div class="line">value &#123;</div><div class="line">tensor &#123;</div><div class="line">  <span class="attr">dtype</span>: DT_FLOAT</div><div class="line">  tensor_shape &#123;</div><div class="line">    dim &#123;</div><div class="line">      <span class="attr">size</span>: <span class="number">1008</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  tensor_content: <span class="string">"\312\277\006"</span></div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">node &#123;</div><div class="line"><span class="attr">name</span>: <span class="string">"softmax/logits/MatMul"</span></div><div class="line">op: <span class="string">"MatMul"</span></div><div class="line">input: <span class="string">"pool_3/_reshape"</span></div><div class="line">input: <span class="string">"softmax/weights"</span></div><div class="line">attr &#123;</div><div class="line"><span class="attr">key</span>: <span class="string">"T"</span></div><div class="line">value &#123;</div><div class="line"><span class="attr">type</span>: DT_FLOAT</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">attr &#123;</div><div class="line"><span class="attr">key</span>: <span class="string">"transpose_a"</span></div><div class="line">value &#123;</div><div class="line"><span class="attr">b</span>: <span class="literal">false</span></div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">attr &#123;</div><div class="line"><span class="attr">key</span>: <span class="string">"transpose_b"</span></div><div class="line">value &#123;</div><div class="line"><span class="attr">b</span>: <span class="literal">false</span></div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">node &#123;</div><div class="line"><span class="attr">name</span>: <span class="string">"softmax/logits"</span></div><div class="line">op: <span class="string">"BiasAdd"</span></div><div class="line">input: <span class="string">"softmax/logits/MatMul"</span></div><div class="line">input: <span class="string">"softmax/biases"</span></div><div class="line">attr &#123;</div><div class="line"><span class="attr">key</span>: <span class="string">"T"</span></div><div class="line">value &#123;</div><div class="line"><span class="attr">type</span>: DT_FLOAT</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">node &#123;</div><div class="line"><span class="attr">name</span>: <span class="string">"softmax"</span></div><div class="line">op: <span class="string">"Softmax"</span></div><div class="line">input: <span class="string">"softmax/logits"</span></div><div class="line">attr &#123;</div><div class="line"><span class="attr">key</span>: <span class="string">"T"</span></div><div class="line">value &#123;</div><div class="line"><span class="attr">type</span>: DT_FLOAT</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="Optional-Parameters"><a href="#Optional-Parameters" class="headerlink" title="Optional Parameters"></a>Optional Parameters</h4><h4 id="Questions"><a href="#Questions" class="headerlink" title="Questions"></a>Questions</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">22:17:28.523085: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn&apos;t compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.</div><div class="line">22:17:28 NodeDef mentions attr &apos;dilations&apos; not in Op&lt;name=Conv2D; signature=input:T, filter:T -&gt; output:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=padding:string,allowed=[&quot;SAME&quot;, &quot;VALID&quot;]; attr=data_format:string,default=&quot;NHWC&quot;,allowed=[&quot;NHWC&quot;, &quot;NCHW&quot;]&gt;; NodeDef: conv/Conv2D = Conv2D[T=DT_FLOAT, data_format=&quot;NHWC&quot;, dilations=[1, 1, 1, 1], padding=&quot;VALID&quot;, strides=[1, 2, 2, 1], use_cudnn_on_gpu=true](Mul, conv/conv2d_params). (Check whether your GraphDef-interpreting binary is up to date with your GraphDef-generating binary.).</div><div class="line"></div><div class="line">22:22:02.629987: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.2 AVX AVX2 FMA</div></pre></td></tr></table></figure>
<h2 id="About-Data-Sets"><a href="#About-Data-Sets" class="headerlink" title="About Data Sets"></a>About Data Sets</h2><ul>
<li><a href="https://towardsdatascience.com/fun-with-small-image-data-sets-part-2-54d683ca8c96" target="_blank" rel="external">Fun with small image data-sets (Part 2)</a></li>
</ul>
<h2 id="扩展阅读-《The-Machine-Learning-Master》"><a href="#扩展阅读-《The-Machine-Learning-Master》" class="headerlink" title="扩展阅读:《The Machine Learning Master》"></a>扩展阅读:<a href="https://www.gitbook.com/book/riboseyim/machine-learning" target="_blank" rel="external">《The Machine Learning Master》</a></h2><p><img src="http://p11slcnom.bkt.clouddn.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/" target="_blank" rel="external">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/" target="_blank" rel="external">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/" target="_blank" rel="external">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/" target="_blank" rel="external">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/" target="_blank" rel="external">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network" target="_blank" rel="external">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/" target="_blank" rel="external">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News" target="_blank" rel="external">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/" target="_blank" rel="external">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/" target="_blank" rel="external">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/" target="_blank" rel="external">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/J75ZdrNCSwBO1y9o84THQg" target="_blank" rel="external">综述论文：机器学习中的模型评价、模型选择与算法选择 | 2018-02-02 机器之心</a></li>
<li><a href="https://dev.to/michaeljtaylor0/plug--play-machine-learning-models-in-golang--fc0" target="_blank" rel="external">Plug &amp; Play Machine Learning Models in GoLang |  BAYESIAN CLASSIFICATION</a></li>
<li><a href="https://hackernoon.com/train-your-machine-learning-models-on-googles-gpus-for-free-forever-a41bd309d6ad" target="_blank" rel="external">Train Your Machine Learning Models on Google’s GPUs for Free — Forever</a></li>
<li><a href="https://towardsdatascience.com/how-do-we-train-neural-networks-edd985562b73" target="_blank" rel="external">How do we ‘train’ neural networks ?</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;
    
    </summary>
    
    
      <category term="架构师" scheme="http://riboseyim.github.com/tags/%E6%9E%B6%E6%9E%84%E5%B8%88/"/>
    
      <category term="DevOps" scheme="http://riboseyim.github.com/tags/DevOps/"/>
    
      <category term="Developer" scheme="http://riboseyim.github.com/tags/Developer/"/>
    
      <category term="数学与算法" scheme="http://riboseyim.github.com/tags/%E6%95%B0%E5%AD%A6%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
      <category term="Machine-Learning" scheme="http://riboseyim.github.com/tags/Machine-Learning/"/>
    
  </entry>
  
</feed>
